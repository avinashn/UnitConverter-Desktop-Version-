/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package unit.converter;

import com.sun.glass.events.KeyEvent;
import java.text.DecimalFormat;
import javax.swing.JOptionPane;

/**
 *
 * @author Avinash
 */
public class UI extends javax.swing.JFrame {

    /**
     * Creates new form UI
     */
    public UI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        barea = new javax.swing.JButton();
        bds = new javax.swing.JButton();
        bfuelcnsmptn = new javax.swing.JButton();
        blength = new javax.swing.JButton();
        bmass = new javax.swing.JButton();
        bspeed = new javax.swing.JButton();
        btemp = new javax.swing.JButton();
        btime = new javax.swing.JButton();
        bvolume = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        bCal = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        jTextFieldInput = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaResult = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Unit Converter");
        setBackground(new java.awt.Color(255, 255, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setName("mainUI"); // NOI18N
        setResizable(false);

        barea.setText("Area");
        barea.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        barea.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        barea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bareaActionPerformed(evt);
            }
        });

        bds.setText("Digital Storage");
        bds.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bdsActionPerformed(evt);
            }
        });

        bfuelcnsmptn.setText("Fuel Consumption");
        bfuelcnsmptn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bfuelcnsmptnActionPerformed(evt);
            }
        });

        blength.setText("Length");
        blength.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blengthActionPerformed(evt);
            }
        });

        bmass.setText("Mass");
        bmass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bmassActionPerformed(evt);
            }
        });

        bspeed.setText("Speed");
        bspeed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bspeedActionPerformed(evt);
            }
        });

        btemp.setText("Temperature");
        btemp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btempActionPerformed(evt);
            }
        });

        btime.setText("Time");
        btime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btimeActionPerformed(evt);
            }
        });

        bvolume.setText("Volume");
        bvolume.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bvolumeActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(102, 102, 102), java.awt.Color.lightGray, new java.awt.Color(204, 255, 204), java.awt.Color.white));
        jPanel1.setPreferredSize(new java.awt.Dimension(284, 260));

        bCal.setText("Calculate");
        bCal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCalActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Hectare", "Square Km", "Square meter", "Square mile", "Acre", "Square yard", "Square foot", "Square inch" }));

        jTextFieldInput.setText(" ");
        jTextFieldInput.setToolTipText("");
        jTextFieldInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldInputActionPerformed(evt);
            }
        });
        jTextFieldInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldInputKeyTyped(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 0, 51));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Area");

        jTextAreaResult.setEditable(false);
        jTextAreaResult.setColumns(20);
        jTextAreaResult.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTextAreaResult.setForeground(new java.awt.Color(51, 0, 51));
        jTextAreaResult.setRows(5);
        jTextAreaResult.setText("\n\nResult here ...!!\n");
        jScrollPane1.setViewportView(jTextAreaResult);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addComponent(bCal, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(31, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jTextFieldInput, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(60, 60, 60))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(bCal)
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57))
        );

        jLabel2.setFont(new java.awt.Font("Calibri", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 0, 51));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Unit Converter");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(barea, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(blength)
                        .addComponent(bmass)
                        .addComponent(bspeed)
                        .addComponent(btemp)
                        .addComponent(bvolume)
                        .addComponent(btime))
                    .addComponent(bds)
                    .addComponent(bfuelcnsmptn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
            .addGroup(layout.createSequentialGroup()
                .addGap(156, 156, 156)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {barea, bds, bfuelcnsmptn, blength, bmass, bspeed, btemp, btime, bvolume});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(barea)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bds)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bfuelcnsmptn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(blength)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bmass)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bspeed)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btemp)
                        .addGap(4, 4, 4)
                        .addComponent(bvolume)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btime))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(63, 63, 63))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {barea, bds, bfuelcnsmptn, blength, bmass, bspeed, btemp, btime, bvolume});

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bareaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bareaActionPerformed
        jLabel1.setText("Area");
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"Hectare", "Square Km", "Square meter", "Square mile", "Acre", "Square yard", "Square foot", "Square inch"}));
    }//GEN-LAST:event_bareaActionPerformed

    private void bdsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bdsActionPerformed
        jLabel1.setText("Digital Storage");
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"Bit", "Byte", "Kilobit", "KiloByte", "Megabit", "MegaByte", "Gigabit", "GigaByte", "Terabit", "TeraByte", "Petabit", "PetaByte"}));
    }//GEN-LAST:event_bdsActionPerformed

    private void bfuelcnsmptnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bfuelcnsmptnActionPerformed
        jLabel1.setText("Fuel Consumption");
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"MPG(US)", "MPG(imp.)", "Km/liter", "Liter/100Km"}));

    }//GEN-LAST:event_bfuelcnsmptnActionPerformed

    private void blengthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blengthActionPerformed
        jLabel1.setText("Length");
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"Millimeters", "Centimeters", "Meters", "Kilometers", "Feet", "Inches", "Miles", "Yards"}));

    }//GEN-LAST:event_blengthActionPerformed

    private void bmassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bmassActionPerformed
        jLabel1.setText("Mass");
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"Metric ton", "Kilogram", "Gram", "Milligram", "Mcg", "Long ton", "Short ton", "Stone", "Pound", "Ounce"}));
    }//GEN-LAST:event_bmassActionPerformed

    private void bspeedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bspeedActionPerformed
        jLabel1.setText("Speed");
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"Miles/hour", "Feet/sec", "Meters/sec", "Km/hour", "Knot"}));
    }//GEN-LAST:event_bspeedActionPerformed

    private void btempActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btempActionPerformed
        jLabel1.setText("Temperature");
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"Celcius", "Farenheit", "Kelvin"}));
    }//GEN-LAST:event_btempActionPerformed

    private void btimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btimeActionPerformed
        jLabel1.setText("Time");
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"Microsecond", "Nanosecond", "Millisecond", "Second", "Minute", "Hour", "Day", "Week", "Month", " Year", "Decade", "Century"}));
    }//GEN-LAST:event_btimeActionPerformed

    private void bvolumeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bvolumeActionPerformed
        jLabel1.setText("Volume");
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"US gal", "US quart", "US pint", "US cup", "US oz", "US tbsp.", "US tsp.", "Cubic meter", "Liter", "Milliliter",
            "Imperial gal", "Imperial quart", "Imperial pint", "Imperial oz", "Imperial tbsp.", "Imperial tsp.", "Cubic foot", "Cubic inch"}));
    }//GEN-LAST:event_bvolumeActionPerformed

    private void jTextFieldInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldInputActionPerformed

    private void bCalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCalActionPerformed
        Double ip = Double.valueOf(jTextFieldInput.getText());
        DecimalFormat newFormat = new DecimalFormat("#.#######");

        if (jLabel1.getText().contains("Area")) {
            Double htr, skm, smtr, sml, acre, sqyrd, sqrft, sqrinch;
            if (jComboBox1.getSelectedItem().equals("Hectare")) {

                skm = Double.valueOf(newFormat.format(ip * 0.01));
                smtr = Double.valueOf(newFormat.format(ip * 10000));
                sml = Double.valueOf(newFormat.format(ip * 0.00386102));
                acre = Double.valueOf(newFormat.format(ip * 2.47105));
                sqyrd = Double.valueOf(newFormat.format(ip * 11959.9));
                sqrft = Double.valueOf(newFormat.format(ip * 107639));
                sqrinch = Double.valueOf(newFormat.format(ip * 1.55e+7));
                jTextAreaResult.setText(
                        skm + "\t Square kilometers \n\n" + smtr + "\t Square meters \n\n"
                        + sml + "\t Square miles \n\n" + acre + "\t Acres \n\n" + sqyrd + "\t Square yard \n\n" + sqrft + "\t Square foot \n\n" + sqrinch + "\t Square inch \n"
                );
            }
            if (jComboBox1.getSelectedItem().equals("Square Km")) {

                htr = Double.valueOf(newFormat.format(ip * 100));
                smtr = Double.valueOf(newFormat.format(ip * 1e+6));
                sml = Double.valueOf(newFormat.format(ip * 0.386102));
                acre = Double.valueOf(newFormat.format(ip * 247.105));
                sqyrd = Double.valueOf(newFormat.format(ip * 1.196e+6));
                sqrft = Double.valueOf(newFormat.format(ip * 1.076e+7));
                sqrinch = Double.valueOf(newFormat.format(ip * 1.55e+9));
                jTextAreaResult.setText(
                        htr + "\t Hectares \n\n" + smtr + "\t Square meters \n\n"
                        + sml + "\t Square miles \n\n" + acre + "\t Acres \n\n" + sqyrd + "\t Square yard \n\n" + sqrft + "\t Square foot \n\n" + sqrinch + "\t Square inch \n"
                );
            }
            if (jComboBox1.getSelectedItem().equals("Square meter")) {

                htr = Double.valueOf(newFormat.format(ip * 1e-4));
                skm = Double.valueOf(newFormat.format(ip * 1e-6));
                sml = Double.valueOf(newFormat.format(ip * 3.861e-7));
                acre = Double.valueOf(newFormat.format(ip * 0.000247105));
                sqyrd = Double.valueOf(newFormat.format(ip * 1.19599));
                sqrft = Double.valueOf(newFormat.format(ip * 10.7639));
                sqrinch = Double.valueOf(newFormat.format(ip * 1550));
                jTextAreaResult.setText(
                        htr + "\t Hectares \n\n" + skm + "\t Square kilometers \n\n"
                        + sml + "\t Square miles \n\n" + acre + "\t Acres \n\n" + sqyrd + "\t Square yard \n\n" + sqrft + "\t Square foot \n\n" + sqrinch + "\t Square inch \n"
                );
            }
            if (jComboBox1.getSelectedItem().equals("Square mile")) {

                htr = Double.valueOf(newFormat.format(ip * 258.999));
                skm = Double.valueOf(newFormat.format(ip * 2.58999));
                smtr = Double.valueOf(newFormat.format(ip * 2.59e+6));
                acre = Double.valueOf(newFormat.format(ip * 640));
                sqyrd = Double.valueOf(newFormat.format(ip * 3.098e+6));
                sqrft = Double.valueOf(newFormat.format(ip * 2.788e+7));
                sqrinch = Double.valueOf(newFormat.format(ip * 4.014e+9));
                jTextAreaResult.setText(
                        htr + "\t Hectares \n\n" + skm + "\t Square kilometers \n\n"
                        + smtr + "\t Square meters \n\n" + acre + "\t Acres \n\n" + sqyrd + "\t Square yard \n\n" + sqrft + "\t Square foot \n\n" + sqrinch + "\t Square inch \n"
                );
            }
            if (jComboBox1.getSelectedItem().equals("Acre")) {

                htr = Double.valueOf(newFormat.format(ip * 0.404686));
                skm = Double.valueOf(newFormat.format(ip * 0.00404686));
                smtr = Double.valueOf(newFormat.format(ip * 4046.86));
                sml = Double.valueOf(newFormat.format(ip * 0.0015625));
                sqyrd = Double.valueOf(newFormat.format(ip * 4840));
                sqrft = Double.valueOf(newFormat.format(ip * 43560));
                sqrinch = Double.valueOf(newFormat.format(ip * 6.273e+6));
                jTextAreaResult.setText(
                        htr + "\t Hectares \n\n" + skm + "\t Square kilometers \n\n"
                        + smtr + "\t Square meters \n\n" + sml + "\t Square miles \n\n" + sqyrd + "\t Square yard \n\n" + sqrft + "\t Square foot \n\n" + sqrinch + "\t Square inch \n"
                );
            }
            if (jComboBox1.getSelectedItem().equals("Square yard")) {

                htr = Double.valueOf(newFormat.format(ip * 8.3613e-5));
                skm = Double.valueOf(newFormat.format(ip * 8.3613e-7));
                smtr = Double.valueOf(newFormat.format(ip * 0.836127));
                sml = Double.valueOf(newFormat.format(ip * 3.2283e-7));
                acre = Double.valueOf(newFormat.format(ip * 0.000206612));
                sqrft = Double.valueOf(newFormat.format(ip * 9));
                sqrinch = Double.valueOf(newFormat.format(ip * 1296));
                jTextAreaResult.setText(
                        htr + "\t Hectares \n\n" + skm + "\t Square kilometers \n\n"
                        + smtr + "\t Square meters \n\n" + sml + "\t Square miles \n\n" + acre + "\t Acres \n\n" + sqrft + "\t Square foot \n\n" + sqrinch + "\t Square inch \n"
                );
            }
            if (jComboBox1.getSelectedItem().equals("Square foot")) {

                htr = Double.valueOf(newFormat.format(ip * 9.2903e-6));
                skm = Double.valueOf(newFormat.format(ip * 9.2903e-8));
                smtr = Double.valueOf(newFormat.format(ip * 0.092903));
                sml = Double.valueOf(newFormat.format(ip * 3.587e-8));
                acre = Double.valueOf(newFormat.format(ip * 2.2957e-5));
                sqyrd = Double.valueOf(newFormat.format(ip * 0.111111));
                sqrinch = Double.valueOf(newFormat.format(ip * 144));
                jTextAreaResult.setText(
                        htr + "\t Hectares \n\n" + skm + "\t Square kilometers \n\n"
                        + smtr + "\t Square meters \n\n" + sml + "\t Square miles \n\n" + acre + "\t Acres \n\n" + sqyrd + "\t Square yards \n\n" + sqrinch + "\t Square inch \n"
                );
            }
            if (jComboBox1.getSelectedItem().equals("Square inch")) {

                htr = Double.valueOf(newFormat.format(ip * 6.4516e-8));
                skm = Double.valueOf(newFormat.format(ip * 6.4516e-10));
                smtr = Double.valueOf(newFormat.format(ip * 0.00064516));
                sml = Double.valueOf(newFormat.format(ip * 2.494e-10));
                acre = Double.valueOf(newFormat.format(ip * 1.5942e-7));
                sqyrd = Double.valueOf(newFormat.format(ip * 0.000771605));
                sqrft = Double.valueOf(newFormat.format(ip * 0.00694444));
                jTextAreaResult.setText(
                        htr + "\t Hectares \n\n" + skm + "\t Square kilometers \n\n"
                        + smtr + "\t Square meters \n\n" + sml + "\t Square miles \n\n" + acre + "\t Acres \n\n" + sqyrd + "\t Square yards \n\n" + sqrft + "\t Square foot \n"
                );
            }
        }
        if (jLabel1.getText().contains("Digital Storage")) {
            Double bit, byt, kbit, kbyt, mbit, mbyt, gbit, gbyt, tbit, tbyt, pbit, pbyt;
            if (jComboBox1.getSelectedItem().equals("Bit")) {
                byt = Double.valueOf(newFormat.format(ip * 0.125));
                kbit = Double.valueOf(newFormat.format(ip * 0.000976563));
                kbyt = Double.valueOf(newFormat.format(ip * 0.00012207));
                mbit = Double.valueOf(newFormat.format(ip * 9.5367e-7));
                mbyt = Double.valueOf(newFormat.format(ip * 1.1921e-7));
                gbit = Double.valueOf(newFormat.format(ip * 9.3132e-10));
                gbyt = Double.valueOf(newFormat.format(ip * 1.1642e-10));
                tbit = Double.valueOf(newFormat.format(ip * 9.0949e-13));
                tbyt = Double.valueOf(newFormat.format(ip * 1.1369e-13));
                pbit = Double.valueOf(newFormat.format(ip * 8.8818e-16));
                pbyt = Double.valueOf(newFormat.format(ip * 1.1102e-16));
                jTextAreaResult.setText(
                        byt + "\t Bytes \n\n" + kbit + "\t Kilobits \n\n" + kbyt + "\t KiloBytes \n\n" + mbit + "\t Megabits \n\n"
                        + mbyt + "\t MegaBytes \n\n" + gbit + "\t Gigabits \n\n" + gbyt + "\t GigaBytes \n\n" + tbit + "\t Terabits \n\n" + tbyt + "\t Terabytes \n\n" + pbit + "\t Petabits \n\n" + pbyt + "\t PetaBytes \n"
                );
            }
            if (jComboBox1.getSelectedItem().equals("Byte")) {
                bit = Double.valueOf(newFormat.format(ip * 8));
                kbit = Double.valueOf(newFormat.format(ip * 0.0078125));
                kbyt = Double.valueOf(newFormat.format(ip * 0.000976563));
                mbit = Double.valueOf(newFormat.format(ip * 7.6294e-6));
                mbyt = Double.valueOf(newFormat.format(ip * 9.5367e-7));
                gbit = Double.valueOf(newFormat.format(ip * 7.4506e-9));
                gbyt = Double.valueOf(newFormat.format(ip * 9.3132e-10));
                tbit = Double.valueOf(newFormat.format(ip * 7.276e-12));
                tbyt = Double.valueOf(newFormat.format(ip * 9.0949e-13));
                pbit = Double.valueOf(newFormat.format(ip * 7.1054e-15));
                pbyt = Double.valueOf(newFormat.format(ip * 8.8818e-16));
                jTextAreaResult.setText(
                        bit + "\t Bits \n\n" + kbit + "\t Kilobits \n\n" + kbyt + "\t KiloBytes \n\n" + mbit + "\t Megabits \n\n"
                        + mbyt + "\t MegaBytes \n\n" + gbit + "\t Gigabits \n\n" + gbyt + "\t GigaBytes \n\n" + tbit + "\t Terabits \n\n" + tbyt + "\t Terabytes \n\n" + pbit + "\t Petabits \n\n" + pbyt + "\t PetaBytes \n"
                );
            }
            if (jComboBox1.getSelectedItem().equals("Kilobit")) {
                bit = Double.valueOf(newFormat.format(ip * 1024));
                byt = Double.valueOf(newFormat.format(ip * 128));
                kbyt = Double.valueOf(newFormat.format(ip * 0.125));
                mbit = Double.valueOf(newFormat.format(ip * 0.000976563));
                mbyt = Double.valueOf(newFormat.format(ip * 0.00012207));
                gbit = Double.valueOf(newFormat.format(ip * 9.5367e-7));
                gbyt = Double.valueOf(newFormat.format(ip * 1.1921e-7));
                tbit = Double.valueOf(newFormat.format(ip * 9.3132e-10));
                tbyt = Double.valueOf(newFormat.format(ip * 1.1642e-10));
                pbit = Double.valueOf(newFormat.format(ip * 9.0949e-13));
                pbyt = Double.valueOf(newFormat.format(ip * 1.1369e-13));
                jTextAreaResult.setText(
                        bit + "\t Bits \n\n" + byt + "\t Bytes \n\n" + kbyt + "\t KiloBytes \n\n" + mbit + "\t Megabits \n\n"
                        + mbyt + "\t MegaBytes \n\n" + gbit + "\t Gigabits \n\n" + gbyt + "\t GigaBytes \n\n" + tbit + "\t Terabits \n\n" + tbyt + "\t Terabytes \n\n" + pbit + "\t Petabits \n\n" + pbyt + "\t PetaBytes \n"
                );
            }
            if (jComboBox1.getSelectedItem().equals("KiloByte")) {
                bit = Double.valueOf(newFormat.format(ip * 8192));
                byt = Double.valueOf(newFormat.format(ip * 1024));
                kbit = Double.valueOf(newFormat.format(ip * 8));
                mbit = Double.valueOf(newFormat.format(ip * 0.0078125));
                mbyt = Double.valueOf(newFormat.format(ip * 0.000976563));
                gbit = Double.valueOf(newFormat.format(ip * 7.6294e-6));
                gbyt = Double.valueOf(newFormat.format(ip * 9.5367e-7));
                tbit = Double.valueOf(newFormat.format(ip * 7.4506e-9));
                tbyt = Double.valueOf(newFormat.format(ip * 9.3132e-10));
                pbit = Double.valueOf(newFormat.format(ip * 7.276e-12));
                pbyt = Double.valueOf(newFormat.format(ip * 9.0949e-13));
                jTextAreaResult.setText(
                        bit + "\t Bits \n\n" + byt + "\t Bytes \n\n" + kbit + "\t Kilobites \n\n" + mbit + "\t Megabits \n\n"
                        + mbyt + "\t MegaBytes \n\n" + gbit + "\t Gigabits \n\n" + gbyt + "\t GigaBytes \n\n" + tbit + "\t Terabits \n\n" + tbyt + "\t Terabytes \n\n" + pbit + "\t Petabits \n\n" + pbyt + "\t PetaBytes \n"
                );
            }
            if (jComboBox1.getSelectedItem().equals("Megabit")) {
                bit = Double.valueOf(newFormat.format(ip * 1.049e+6));
                byt = Double.valueOf(newFormat.format(ip * 131072));
                kbit = Double.valueOf(newFormat.format(ip * 1024));
                kbyt = Double.valueOf(newFormat.format(ip * 128));
                mbyt = Double.valueOf(newFormat.format(ip * 0.125));
                gbit = Double.valueOf(newFormat.format(ip * 0.000976563));
                gbyt = Double.valueOf(newFormat.format(ip * 0.00012207));
                tbit = Double.valueOf(newFormat.format(ip * 9.5367e-7));
                tbyt = Double.valueOf(newFormat.format(ip * 1.1921e-7));
                pbit = Double.valueOf(newFormat.format(ip * 9.3132e-10));
                pbyt = Double.valueOf(newFormat.format(ip * 1.1642e-10));
                jTextAreaResult.setText(
                        bit + "\t Bits \n\n" + byt + "\t Bytes \n\n" + kbit + "\t Kilobites \n\n" + kbyt + "\t KiloBytes \n\n"
                        + mbyt + "\t MegaBytes \n\n" + gbit + "\t Gigabits \n\n" + gbyt + "\t GigaBytes \n\n" + tbit + "\t Terabits \n\n" + tbyt + "\t Terabytes \n\n" + pbit + "\t Petabits \n\n" + pbyt + "\t PetaBytes \n"
                );
            }
            if (jComboBox1.getSelectedItem().equals("MegaByte")) {
                bit = Double.valueOf(newFormat.format(ip * 8.389e+6));
                byt = Double.valueOf(newFormat.format(ip * 1.049e+6));
                kbit = Double.valueOf(newFormat.format(ip * 8192));
                kbyt = Double.valueOf(newFormat.format(ip * 1024));
                mbit = Double.valueOf(newFormat.format(ip * 8));
                gbit = Double.valueOf(newFormat.format(ip * 0.0078125));
                gbyt = Double.valueOf(newFormat.format(ip * 0.000976563));
                tbit = Double.valueOf(newFormat.format(ip * 7.6294e-6));
                tbyt = Double.valueOf(newFormat.format(ip * 9.5367e-7));
                pbit = Double.valueOf(newFormat.format(ip * 7.4506e-9));
                pbyt = Double.valueOf(newFormat.format(ip * 9.3132e-10));
                jTextAreaResult.setText(
                        bit + "\t Bits \n\n" + byt + "\t Bytes \n\n" + kbit + "\t Kilobites \n\n" + kbyt + "\t KiloBytes \n\n"
                        + mbit + "\t Megabites \n\n" + gbit + "\t Gigabits \n\n" + gbyt + "\t GigaBytes \n\n" + tbit + "\t Terabits \n\n" + tbyt + "\t Terabytes \n\n" + pbit + "\t Petabits \n\n" + pbyt + "\t PetaBytes \n"
                );
            }
            if (jComboBox1.getSelectedItem().equals("Gigabit")) {
                bit = Double.valueOf(newFormat.format(ip * 1.074e+9));
                byt = Double.valueOf(newFormat.format(ip * 1.342e+8));
                kbit = Double.valueOf(newFormat.format(ip * 1.049e+6));
                kbyt = Double.valueOf(newFormat.format(ip * 131072));
                mbit = Double.valueOf(newFormat.format(ip * 1024));
                mbyt = Double.valueOf(newFormat.format(ip * 128));
                gbyt = Double.valueOf(newFormat.format(ip * 0.125));
                tbit = Double.valueOf(newFormat.format(ip * 0.000976563));
                tbyt = Double.valueOf(newFormat.format(ip * 0.00012207));
                pbit = Double.valueOf(newFormat.format(ip * 9.5367e-7));
                pbyt = Double.valueOf(newFormat.format(ip * 1.1921e-7));
                jTextAreaResult.setText(
                        bit + "\t Bits \n\n" + byt + "\t Bytes \n\n" + kbit + "\t Kilobites \n\n" + kbyt + "\t KiloBytes \n\n"
                        + mbit + "\t Megabites \n\n" + mbyt + "\t MegaBytes \n\n" + gbyt + "\t GigaBytes \n\n" + tbit + "\t Terabits \n\n" + tbyt + "\t Terabytes \n\n" + pbit + "\t Petabits \n\n" + pbyt + "\t PetaBytes \n"
                );
            }
            if (jComboBox1.getSelectedItem().equals("GigaByte")) {
                bit = Double.valueOf(newFormat.format(ip * 8.59e+9));
                byt = Double.valueOf(newFormat.format(ip * 1.074e+9));
                kbit = Double.valueOf(newFormat.format(ip * 8.389e+6));
                kbyt = Double.valueOf(newFormat.format(ip * 1.049e+6));
                mbit = Double.valueOf(newFormat.format(ip * 8192));
                mbyt = Double.valueOf(newFormat.format(ip * 1024));
                gbit = Double.valueOf(newFormat.format(ip * 8));
                tbit = Double.valueOf(newFormat.format(ip * 0.0078125));
                tbyt = Double.valueOf(newFormat.format(ip * 0.000976563));
                pbit = Double.valueOf(newFormat.format(ip * 7.6294e-6));
                pbyt = Double.valueOf(newFormat.format(ip * 9.5367e-7));
                jTextAreaResult.setText(
                        bit + "\t Bits \n\n" + byt + "\t Bytes \n\n" + kbit + "\t Kilobites \n\n" + kbyt + "\t KiloBytes \n\n"
                        + mbit + "\t Megabites \n\n" + mbyt + "\t MegaBytes \n\n" + gbit + "\t Gigabites \n\n" + tbit + "\t Terabits \n\n" + tbyt + "\t Terabytes \n\n" + pbit + "\t Petabits \n\n" + pbyt + "\t PetaBytes \n"
                );
            }
            if (jComboBox1.getSelectedItem().equals("Terabit")) {
                bit = Double.valueOf(newFormat.format(ip * 1.1e+12));
                byt = Double.valueOf(newFormat.format(ip * 1.374e+11));
                kbit = Double.valueOf(newFormat.format(ip * 1.074e+9));
                kbyt = Double.valueOf(newFormat.format(ip * 1.342e+8));
                mbit = Double.valueOf(newFormat.format(ip * 1.049e+6));
                mbyt = Double.valueOf(newFormat.format(ip * 131072));
                gbit = Double.valueOf(newFormat.format(ip * 1024));
                gbyt = Double.valueOf(newFormat.format(ip * 128));
                tbyt = Double.valueOf(newFormat.format(ip * 0.125));
                pbit = Double.valueOf(newFormat.format(ip * 0.000976563));
                pbyt = Double.valueOf(newFormat.format(ip * 0.00012207));
                jTextAreaResult.setText(
                        bit + "\t Bits \n\n" + byt + "\t Bytes \n\n" + kbit + "\t Kilobites \n\n" + kbyt + "\t KiloBytes \n\n"
                        + mbit + "\t Megabites \n\n" + mbyt + "\t MegaBytes \n\n" + gbit + "\t Gigabites \n\n" + gbyt + "\t GigaBytes \n\n" + tbyt + "\t Terabytes \n\n" + pbit + "\t Petabits \n\n" + pbyt + "\t PetaBytes \n"
                );
            }
            if (jComboBox1.getSelectedItem().equals("TeraByte")) {
                bit = Double.valueOf(newFormat.format(ip * 8.796e+12));
                byt = Double.valueOf(newFormat.format(ip * 1.1e+12));
                kbit = Double.valueOf(newFormat.format(ip * 8.59e+9));
                kbyt = Double.valueOf(newFormat.format(ip * 1.074e+9));
                mbit = Double.valueOf(newFormat.format(ip * 8.389e+6));
                mbyt = Double.valueOf(newFormat.format(ip * 1.049e+6));
                gbit = Double.valueOf(newFormat.format(ip * 8192));
                gbyt = Double.valueOf(newFormat.format(ip * 1024));
                tbit = Double.valueOf(newFormat.format(ip * 8));
                pbit = Double.valueOf(newFormat.format(ip * 0.0078125));
                pbyt = Double.valueOf(newFormat.format(ip * 0.000976563));
                jTextAreaResult.setText(
                        bit + "\t Bits \n\n" + byt + "\t Bytes \n\n" + kbit + "\t Kilobites \n\n" + kbyt + "\t KiloBytes \n\n"
                        + mbit + "\t Megabites \n\n" + mbyt + "\t MegaBytes \n\n" + gbit + "\t Gigabites \n\n" + gbyt + "\t GigaBytes \n\n" + tbit + "\t Terabites \n\n" + pbit + "\t Petabits \n\n" + pbyt + "\t PetaBytes \n"
                );
            }
            if (jComboBox1.getSelectedItem().equals("Petabit")) {
                bit = Double.valueOf(newFormat.format(ip * 9.007e+15));
                byt = Double.valueOf(newFormat.format(ip * 1.126e+15));
                kbit = Double.valueOf(newFormat.format(ip * 1.1e+12));
                kbyt = Double.valueOf(newFormat.format(ip * 1.374e+11));
                mbit = Double.valueOf(newFormat.format(ip * 1.074e+9));
                mbyt = Double.valueOf(newFormat.format(ip * 1.342e+8));
                gbit = Double.valueOf(newFormat.format(ip * 1.049e+6));
                gbyt = Double.valueOf(newFormat.format(ip * 131072));
                tbit = Double.valueOf(newFormat.format(ip * 1024));
                tbyt = Double.valueOf(newFormat.format(ip * 128));
                pbyt = Double.valueOf(newFormat.format(ip * 0.125));
                jTextAreaResult.setText(
                        bit + "\t Bits \n\n" + byt + "\t Bytes \n\n" + kbit + "\t Kilobites \n\n" + kbyt + "\t KiloBytes \n\n"
                        + mbit + "\t Megabites \n\n" + mbyt + "\t MegaBytes \n\n" + gbit + "\t Gigabites \n\n" + gbyt + "\t GigaBytes \n\n" + tbit + "\t Terabites \n\n" + tbyt + "\t TeraBytes \n\n" + pbyt + "\t PetaBytes \n"
                );
            }
            if (jComboBox1.getSelectedItem().equals("PetaByte")) {
                bit = Double.valueOf(newFormat.format(ip * 9.007e+15));
                byt = Double.valueOf(newFormat.format(ip * 1.126e+15));
                kbit = Double.valueOf(newFormat.format(ip * 8.796e+12));
                kbyt = Double.valueOf(newFormat.format(ip * 1.374e+11));
                mbit = Double.valueOf(newFormat.format(ip * 1.074e+9));
                mbyt = Double.valueOf(newFormat.format(ip * 1.342e+8));
                gbit = Double.valueOf(newFormat.format(ip * 1.049e+6));
                gbyt = Double.valueOf(newFormat.format(ip * 131072));
                tbit = Double.valueOf(newFormat.format(ip * 1024));
                tbyt = Double.valueOf(newFormat.format(ip * 128));
                pbit = Double.valueOf(newFormat.format(ip * 0.125));
                jTextAreaResult.setText(
                        bit + "\t Bits \n\n" + byt + "\t Bytes \n\n" + kbit + "\t Kilobites \n\n" + kbyt + "\t KiloBytes \n\n"
                        + mbit + "\t Megabites \n\n" + mbyt + "\t MegaBytes \n\n" + gbit + "\t Gigabites \n\n" + gbyt + "\t GigaBytes \n\n" + tbit + "\t Terabites \n\n" + tbyt + "\t TeraBytes \n\n" + pbit + "\t PetaBites \n"
                );
            }
        }
        if (jLabel1.getText().contains("Fuel Consumption")) {
            Double mpgUS, mpgIMP, kmpl, lpkm;
            if (jComboBox1.getSelectedItem().equals("MPG(US)")) {
                mpgIMP = Double.valueOf(newFormat.format(ip * 1.20095));
                kmpl = Double.valueOf(newFormat.format(ip * 0.425144));
                lpkm = Double.valueOf(newFormat.format(ip * 235.215));
                jTextAreaResult.setText(
                        mpgIMP + "\t MPG(imp.) \n\n" + kmpl + "\t Km/liter \n\n" + lpkm + "\t Liter/100Km \n"
                );
            }
            if (jComboBox1.getSelectedItem().equals("MPG(imp.)")) {
                mpgUS = Double.valueOf(newFormat.format(ip * 0.832674));
                kmpl = Double.valueOf(newFormat.format(ip * 0.354006));
                lpkm = Double.valueOf(newFormat.format(ip * 282.481));
                jTextAreaResult.setText(
                        mpgUS + "\t MPG(US) \n\n" + kmpl + "\t Km/liter \n\n" + lpkm + "\t Liter/100Km \n"
                );
            }
            if (jComboBox1.getSelectedItem().equals("Km/liter")) {
                mpgUS = ip * 2.35215;
                mpgIMP = ip * 2.82481;
                lpkm = ip * 100;
                jTextAreaResult.setText(
                        mpgUS + "\t MPG(US) \n\n" + mpgIMP + "\t MPG(imp.) \n\n" + lpkm + "\t Liter/100Km \n"
                );
            }
            if (jComboBox1.getSelectedItem().equals("Liter/100Km")) {
                mpgUS = Double.valueOf(newFormat.format(ip * 235.215));
                mpgIMP = Double.valueOf(newFormat.format(ip * 282.481));
                kmpl = Double.valueOf(newFormat.format(ip * 100));
                jTextAreaResult.setText(
                        mpgUS + "\t MPG(US) \n\n" + mpgIMP + "\t MPG(imp.) \n\n" + kmpl + "\t Km/liter \n"
                );
            }
        }
        if (jLabel1.getText().contains("Length")) {
            Double mm, cm, m, km, ft, ich, mle, yrd;
            if (jComboBox1.getSelectedItem().equals("Millimeters")) {

                cm = Double.valueOf(newFormat.format(ip * 0.1));
                km = Double.valueOf(newFormat.format(ip * 1.e-6));
                m = Double.valueOf(newFormat.format(ip * 0.001));
                ft = Double.valueOf(newFormat.format(ip * 0.00328084));
                ich = Double.valueOf(newFormat.format(ip * 0.0393701));
                mle = Double.valueOf(newFormat.format(ip * 6.2137e-7));
                yrd = Double.valueOf(newFormat.format(ip * 0.00109361));
                jTextAreaResult.setText(
                        cm + "\t Centimeters \n\n" + km + "\t Kilometers \n\n"
                        + m + "\t Meters \n\n" + ft + "\t Feet \n\n" + ich + "\t Inches \n\n"
                        + mle + "\t Miles \n\n" + yrd + "\t Yards \n\n"
                );
            }
            if (jComboBox1.getSelectedItem().equals("Centimeters")) {

                mm = Double.valueOf(newFormat.format(ip * 10));
                km = Double.valueOf(newFormat.format(ip * 1.e-5));
                m = Double.valueOf(newFormat.format(ip * 0.01));
                ft = Double.valueOf(newFormat.format(ip * 0.0328084));
                ich = Double.valueOf(newFormat.format(ip * 0.393701));
                mle = Double.valueOf(newFormat.format(ip * 6.2137e-6));
                yrd = Double.valueOf(newFormat.format(ip * 0.0109361));
                jTextAreaResult.setText(
                        mm + "\t Millimeters \n\n" + km + "\t Kilometers \n\n"
                        + m + "\t Meters \n\n" + ft + "\t Feet \n\n" + ich + "\t Inches \n\n"
                        + mle + "\t Miles \n\n" + yrd + "\t Yards \n\n"
                );
            }
            if (jComboBox1.getSelectedItem().equals("Kilometers")) {

                mm = Double.valueOf(newFormat.format(ip * 1e+6));
                cm = Double.valueOf(newFormat.format(ip * 100000));
                m = Double.valueOf(newFormat.format(ip * 1000));
                ft = Double.valueOf(newFormat.format(ip * 3280.84));
                ich = Double.valueOf(newFormat.format(ip * 39370.1));
                mle = Double.valueOf(newFormat.format(ip * 0.621371));
                yrd = Double.valueOf(newFormat.format(ip * 1093.61));
                jTextAreaResult.setText(
                        mm + "\t Millimeters \n\n" + cm + "\t Centimeters \n\n"
                        + m + "\t Meters \n\n" + ft + "\t Feet \n\n" + ich + "\t Inches \n\n"
                        + mle + "\t Miles \n\n" + yrd + "\t Yards \n\n"
                );
            }
            if (jComboBox1.getSelectedItem().equals("Meters")) {

                mm = Double.valueOf(newFormat.format(ip * 1000));
                cm = Double.valueOf(newFormat.format(ip * 100));
                km = Double.valueOf(newFormat.format(ip * 0.001));
                ft = Double.valueOf(newFormat.format(ip * 3.28084));
                ich = Double.valueOf(newFormat.format(ip * 39.3701));
                mle = Double.valueOf(newFormat.format(ip * 0.000621371));
                yrd = Double.valueOf(newFormat.format(ip * 1.09361));
                jTextAreaResult.setText(
                        mm + "\t Millimeters \n\n" + cm + "\t Centimeters \n\n"
                        + km + "\t Kilometers \n\n" + ft + "\t Feet \n\n"
                        + ich + "\t Inches \n\n" + mle + "\t Miles \n\n" + yrd + "\t Yards \n\n"
                );
            }
            if (jComboBox1.getSelectedItem().equals("Feet")) {

                mm = Double.valueOf(newFormat.format(ip * 304.8));
                cm = Double.valueOf(newFormat.format(ip * 30.48));
                km = Double.valueOf(newFormat.format(ip * 0.0003048));
                m = Double.valueOf(newFormat.format(ip * 0.3048));
                ich = Double.valueOf(newFormat.format(ip * 12));
                mle = Double.valueOf(newFormat.format(ip * 0.000189394));
                yrd = Double.valueOf(newFormat.format(ip * 0.33));
                jTextAreaResult.setText(
                        mm + "\t Millimeters \n\n" + cm + "\t Centimeters \n\n"
                        + km + "\t Kilometers \n\n" + m + "\t Meters \n\n"
                        + ich + "\t Inches \n\n" + mle + "\t Miles \n\n" + yrd + "\t Yards \n\n"
                );
            }
            if (jComboBox1.getSelectedItem().equals("Inches")) {

                mm = Double.valueOf(newFormat.format(ip * 25.4));
                cm = Double.valueOf(newFormat.format(ip * 2.54));
                km = Double.valueOf(newFormat.format(ip * 2.54e-5));
                m = Double.valueOf(newFormat.format(ip * 0.0254));
                ft = Double.valueOf(newFormat.format(ip * 0.0833333));
                mle = Double.valueOf(newFormat.format(ip * 1.5783e-5));
                yrd = Double.valueOf(newFormat.format(ip * 0.277778));
                jTextAreaResult.setText(
                        mm + "\t Millimeters \n\n" + cm + "\t Centimeters \n\n"
                        + km + "\t Kilometers \n\n" + m + "\t Meters \n\n"
                        + ft + "\t Feet \n\n" + mle + "\t Miles \n\n" + yrd + "\t Yards \n\n"
                );
            }
            if (jComboBox1.getSelectedItem().equals("Miles")) {

                mm = Double.valueOf(newFormat.format(ip * 1.609e+6));
                cm = Double.valueOf(newFormat.format(ip * 160934));
                km = Double.valueOf(newFormat.format(ip * 1.609034));
                m = Double.valueOf(newFormat.format(ip * 1609.34));
                ft = Double.valueOf(newFormat.format(ip * 5280));
                ich = Double.valueOf(newFormat.format(ip * 63360));
                yrd = Double.valueOf(newFormat.format(ip * 1760));
                jTextAreaResult.setText(
                        mm + "\t Millimeters \n\n" + cm + "\t Centimeters \n\n"
                        + km + "\t Kilometers \n\n" + m + "\t Meters \n\n"
                        + ft + "\t Feet \n\n" + ich + "\t Inches \n\n" + yrd + "\t Yards \n\n"
                );
            }
            if (jComboBox1.getSelectedItem().equals("Yards")) {

                mm = Double.valueOf(newFormat.format(ip * 914.4));
                cm = Double.valueOf(newFormat.format(ip * 91.44));
                km = Double.valueOf(newFormat.format(ip * 0.0009144));
                m = Double.valueOf(newFormat.format(ip * 0.9144));
                ft = Double.valueOf(newFormat.format(ip * 3));
                ich = Double.valueOf(newFormat.format(ip * 36));
                mle = Double.valueOf(newFormat.format(ip * 0.000568182));
                jTextAreaResult.setText(
                        mm + "\t Millimeters \n\n" + cm + "\t Centimeters \n\n"
                        + km + "\t Kilometers \n\n" + m + "\t Meters \n\n"
                        + ft + "\t Feet \n\n" + ich + "\t Inches \n\n" + mle + "\t Miles \n\n"
                );
            }
        }
        if (jLabel1.getText().equals("Mass")) {
            Double mt, kg, g, mg, mcg, lt, st, s, p, o;
            if (jComboBox1.getSelectedItem().equals("Metric ton")) {
                kg = Double.valueOf(newFormat.format(ip * 1000));
                g = Double.valueOf(newFormat.format(ip * 1e+6));
                mg = Double.valueOf(newFormat.format(ip * 1e+9));
                mcg = Double.valueOf(newFormat.format(ip * 1e+12));
                lt = Double.valueOf(newFormat.format(ip * 0.984207));
                st = Double.valueOf(newFormat.format(ip * 1.10231));
                s = Double.valueOf(newFormat.format(ip * 157.473));
                p = Double.valueOf(newFormat.format(ip * 2204.62));
                o = Double.valueOf(newFormat.format(ip * 35274));
                jTextAreaResult.setText(
                        kg + "\t Kilograms \n\n" + g + "\t Grams \n\n" + mg + "\t milligrams \n\n" + mcg + "\t Mcg \n\n"
                        + lt + "\t Long ton \n\n" + st + "\t Short ton \n\n"
                        + s + "\t Stone \n\n" + p + "\t Pound \n\n" + o + "\t Ounces \n\n"
                );

            }
            if (jComboBox1.getSelectedItem().equals("Kilogram")) {
                mt = Double.valueOf(newFormat.format(ip * 0.001));
                g = Double.valueOf(newFormat.format(ip * 1000));
                mg = Double.valueOf(newFormat.format(ip * 1e+6));
                mcg = Double.valueOf(newFormat.format(ip * 1e+9));
                lt = Double.valueOf(newFormat.format(ip * 0.000984207));
                st = Double.valueOf(newFormat.format(ip * 0.00110231));
                s = Double.valueOf(newFormat.format(ip * 0.157473));
                p = Double.valueOf(newFormat.format(ip * 2.20462));
                o = Double.valueOf(newFormat.format(ip * 35.274));
                jTextAreaResult.setText(
                        mt + "\t Metric ton \n\n" + g + "\t Grams \n\n" + mg + "\t milligrams \n\n" + mcg + "\t Mcg \n\n"
                        + lt + "\t Long ton \n\n" + st + "\t Short ton \n\n"
                        + s + "\t Stone \n\n" + p + "\t Pound \n\n" + o + "\t Ounces \n\n"
                );

            }
            if (jComboBox1.getSelectedItem().equals("Gram")) {
                mt = Double.valueOf(newFormat.format(ip * 1e-6));
                kg = Double.valueOf(newFormat.format(ip * 0.001));
                mg = Double.valueOf(newFormat.format(ip * 1000));
                mcg = Double.valueOf(newFormat.format(ip * 1e+6));
                lt = Double.valueOf(newFormat.format(ip * 9.8421e-7));
                st = Double.valueOf(newFormat.format(ip * 1.1023e-6));
                s = Double.valueOf(newFormat.format(ip * 0.000157473));
                p = Double.valueOf(newFormat.format(ip * 0.00220462));
                o = Double.valueOf(newFormat.format(ip * 0.035274));
                jTextAreaResult.setText(
                        mt + "\t Metric ton \n\n" + kg + "\t Kilorams \n\n" + mg + "\t milligrams \n\n" + mcg + "\t Mcg \n\n"
                        + lt + "\t Long ton \n\n" + st + "\t Short ton \n\n"
                        + s + "\t Stone \n\n" + p + "\t Pound \n\n" + o + "\t Ounces \n\n"
                );

            }
            if (jComboBox1.getSelectedItem().equals("Milligram")) {
                mt = Double.valueOf(newFormat.format(ip * 1e-9));
                kg = Double.valueOf(newFormat.format(ip * 1e-6));
                g = Double.valueOf(newFormat.format(ip * 0.001));
                mcg = Double.valueOf(newFormat.format(ip * 1000));
                lt = Double.valueOf(newFormat.format(ip * 9.8421e-10));
                st = Double.valueOf(newFormat.format(ip * 1.1023e-9));
                s = Double.valueOf(newFormat.format(ip * 1.5747e-7));
                p = Double.valueOf(newFormat.format(ip * 2.2046e-6));
                o = Double.valueOf(newFormat.format(ip * 3.5274e-5));
                jTextAreaResult.setText(
                        mt + "\t Metric ton \n\n" + kg + "\t Kilorams \n\n" + g + "\t Grams \n\n" + mcg + "\t Mcg \n\n"
                        + lt + "\t Long ton \n\n" + st + "\t Short ton \n\n"
                        + s + "\t Stone \n\n" + p + "\t Pound \n\n" + o + "\t Ounces \n\n"
                );

            }
            if (jComboBox1.getSelectedItem().equals("Mcg")) {
                mt = Double.valueOf(newFormat.format(ip * 1e-12));
                kg = Double.valueOf(newFormat.format(ip * 1e-9));
                g = Double.valueOf(newFormat.format(ip * 1.016e+6));
                lt = Double.valueOf(newFormat.format(ip * 9.8421e-13));
                mg = Double.valueOf(newFormat.format(ip * 0.001));
                st = Double.valueOf(newFormat.format(ip * 1.1023e-12));
                s = Double.valueOf(newFormat.format(ip * 1.5747e-10));
                p = Double.valueOf(newFormat.format(ip * 2.2046e-9));
                o = Double.valueOf(newFormat.format(ip * 3.5274e-8));
                jTextAreaResult.setText(
                        mt + "\t Metric ton \n\n" + kg + "\t Kilorams \n\n" + g + "\t Grams \n\n" + lt + "\t Long ton \n\n"
                        + mg + "\t Milligram \n\n" + st + "\t Short ton \n\n"
                        + s + "\t Stone \n\n" + p + "\t Pound \n\n" + o + "\t Ounces \n\n"
                );

            }

            if (jComboBox1.getSelectedItem().equals("Long ton")) {
                mt = Double.valueOf(newFormat.format(ip * 1.01605));
                kg = Double.valueOf(newFormat.format(ip * 1016.05));
                g = Double.valueOf(newFormat.format(ip * 1.016e+6));
                mcg = Double.valueOf(newFormat.format(ip * 1.016e+12));
                mg = Double.valueOf(newFormat.format(ip * 1.016e+9));
                st = Double.valueOf(newFormat.format(ip * 1.12));
                s = Double.valueOf(newFormat.format(ip * 160));
                p = Double.valueOf(newFormat.format(ip * 2240));
                o = Double.valueOf(newFormat.format(ip * 35840));
                jTextAreaResult.setText(
                        mt + "\t Metric ton \n\n" + kg + "\t Kilorams \n\n" + g + "\t Grams \n\n" + mcg + "\t Mcg \n\n"
                        + mg + "\t Milligram \n\n" + st + "\t Short ton \n\n"
                        + s + "\t Stone \n\n" + p + "\t Pound \n\n" + o + "\t Ounces \n\n"
                );

            }
            if (jComboBox1.getSelectedItem().equals("Short ton")) {
                mt = Double.valueOf(newFormat.format(ip * 0.907185));
                kg = Double.valueOf(newFormat.format(ip * 907.185));
                g = Double.valueOf(newFormat.format(ip * 907185));
                mcg = Double.valueOf(newFormat.format(ip * 9.072e+11));
                mg = Double.valueOf(newFormat.format(ip * 9.072e+8));
                lt = Double.valueOf(newFormat.format(ip * 0.892857));
                s = Double.valueOf(newFormat.format(ip * 142.857));
                p = Double.valueOf(newFormat.format(ip * 2000));
                o = Double.valueOf(newFormat.format(ip * 32000));
                jTextAreaResult.setText(
                        mt + "\t Metric ton \n\n" + kg + "\t Kilorams \n\n" + g + "\t Grams \n\n" + mcg + "\t Mcg \n\n"
                        + mg + "\t Milligram \n\n" + lt + "\t Long ton \n\n"
                        + s + "\t Stone \n\n" + p + "\t Pound \n\n" + o + "\t Ounces \n\n"
                );

            }
            if (jComboBox1.getSelectedItem().equals("Pound")) {
                mt = Double.valueOf(newFormat.format(ip * 0.000453592));
                kg = Double.valueOf(newFormat.format(ip * 0.453592));
                g = Double.valueOf(newFormat.format(ip * 453.592));
                mcg = Double.valueOf(newFormat.format(ip * 4.536e+8));
                mg = Double.valueOf(newFormat.format(ip * 453592));
                lt = Double.valueOf(newFormat.format(ip * 0.000446429));
                s = Double.valueOf(newFormat.format(ip * 0.0714286));
                st = Double.valueOf(newFormat.format(ip * 0.0005));
                o = Double.valueOf(newFormat.format(ip * 16));
                jTextAreaResult.setText(
                        mt + "\t Metric ton \n\n" + kg + "\t Kilorams \n\n" + g + "\t Grams \n\n" + mcg + "\t Mcg \n\n"
                        + mg + "\t Milligram \n\n" + lt + "\t Long ton \n\n"
                        + s + "\t Stone \n\n" + st + "\t Short ton \n\n" + o + "\t Ounces \n\n"
                );

            }
            if (jComboBox1.getSelectedItem().equals("Stone")) {
                mt = Double.valueOf(newFormat.format(ip * 0.00635029));
                kg = Double.valueOf(newFormat.format(ip * 6.35029));
                g = Double.valueOf(newFormat.format(ip * 6350.29));
                mcg = Double.valueOf(newFormat.format(ip * 6.35e+9));
                mg = Double.valueOf(newFormat.format(ip * 6.35e+6));
                lt = Double.valueOf(newFormat.format(ip * 0.00625));
                p = Double.valueOf(newFormat.format(ip * 14));
                st = Double.valueOf(newFormat.format(ip * 0.007));
                o = Double.valueOf(newFormat.format(ip * 224));
                jTextAreaResult.setText(
                        mt + "\t Metric ton \n\n" + kg + "\t Kilorams \n\n" + g + "\t Grams \n\n" + mcg + "\t Mcg \n\n"
                        + mg + "\t Milligram \n\n" + lt + "\t Long ton \n\n"
                        + p + "\t Pound \n\n" + st + "\t Short ton \n\n" + o + "\t Ounces \n\n"
                );

            }
            if (jComboBox1.getSelectedItem().equals("Ounce")) {
                mt = Double.valueOf(newFormat.format(ip * 2.835e-5));
                kg = Double.valueOf(newFormat.format(ip * 0.0283495));
                g = Double.valueOf(newFormat.format(ip * 28.3495));
                mcg = Double.valueOf(newFormat.format(ip * 2.835e+7));
                mg = Double.valueOf(newFormat.format(ip * 28349.5));
                lt = Double.valueOf(newFormat.format(ip * 2.7902e-5));
                p = Double.valueOf(newFormat.format(ip * 0.0625));
                st = Double.valueOf(newFormat.format(ip * 3.125e-5));
                s = Double.valueOf(newFormat.format(ip * 0.00446429));
                jTextAreaResult.setText(
                        mt + "\t Metric ton \n\n" + kg + "\t Kilorams \n\n" + g + "\t Grams \n\n" + mcg + "\t Mcg \n\n"
                        + mg + "\t Milligram \n\n" + lt + "\t Long ton \n\n"
                        + p + "\t Pound \n\n" + st + "\t Short ton \n\n" + s + "\t Stone \n\n"
                );

            }
        }
        if (jLabel1.getText().equals("Speed")) {
            Double mph, fps, mps, kmph, knot;
            if (jComboBox1.getSelectedItem().equals("Miles/hour")) {
                fps = Double.valueOf(newFormat.format(ip * 1.46667));
                mps = Double.valueOf(newFormat.format(ip * 0.44704));
                kmph = Double.valueOf(newFormat.format(ip * 1.60934));
                knot = Double.valueOf(newFormat.format(ip * 0.868976));
                jTextAreaResult.setText(
                        fps + "\t Feet/sec \n\n" + mps + "\t Meters/sec \n\n"
                        + kmph + "\t Km/hour \n\n" + knot + "\t Knot \n\n"
                );

            }
            if (jComboBox1.getSelectedItem().equals("Feet/sec")) {
                mph = Double.valueOf(newFormat.format(ip * 0.681818));
                mps = Double.valueOf(newFormat.format(ip * 0.3048));
                kmph = Double.valueOf(newFormat.format(ip * 1.09728));
                knot = Double.valueOf(newFormat.format(ip * 0.592484));
                jTextAreaResult.setText(
                        mph + "\t Miles/hour \n\n" + mps + "\t Meters/sec \n\n"
                        + kmph + "\t Km/hour \n\n" + knot + "\t Knot \n\n"
                );

            }
            if (jComboBox1.getSelectedItem().equals("Meters/sec")) {
                mph = Double.valueOf(newFormat.format(ip * 2.23694));
                fps = Double.valueOf(newFormat.format(ip * 3.28084));
                kmph = Double.valueOf(newFormat.format(ip * 3.6));
                knot = Double.valueOf(newFormat.format(ip * 1.94384));
                jTextAreaResult.setText(
                        mph + "\t Miles/hour \n\n" + fps + "\t Feet/sec \n\n"
                        + kmph + "\t Km/hour \n\n" + knot + "\t Knot \n\n"
                );

            }
            if (jComboBox1.getSelectedItem().equals("Km/hour")) {
                mph = Double.valueOf(newFormat.format(ip * 0.621371));
                fps = Double.valueOf(newFormat.format(ip * 0.911344));
                mps = Double.valueOf(newFormat.format(ip * 0.277778));
                knot = Double.valueOf(newFormat.format(ip * 0.539957));
                jTextAreaResult.setText(
                        mph + "\t Miles/hour \n\n" + fps + "\t Feet/sec \n\n"
                        + mps + "\t Meters/sec \n\n" + knot + "\t Knot \n\n"
                );

            }
            if (jComboBox1.getSelectedItem().equals("Knot")) {
                mph = Double.valueOf(newFormat.format(ip * 1.15078));
                fps = Double.valueOf(newFormat.format(ip * 1.68781));
                mps = Double.valueOf(newFormat.format(ip * 0.514444));
                kmph = Double.valueOf(newFormat.format(ip * 1.852));
                jTextAreaResult.setText(
                        mph + "\t Miles/hour \n\n" + fps + "\t Feet/sec \n\n"
                        + mps + "\t Meters/sec \n\n" + kmph + "\t Km/hour \n\n"
                );

            }
        }
        if (jLabel1.getText().equals("Temperature")) {
            Double c, k, f;
            if (jComboBox1.getSelectedItem().equals("Celcius")) {
                f = Double.valueOf(newFormat.format((ip * 9 / 5) + 32));
                k = Double.valueOf(newFormat.format(ip + 273.15));
                jTextAreaResult.setText(
                        f + "\t Fahrenheit \n\n" + k + "\t Kelvin"
                );
            }
            if (jComboBox1.getSelectedItem().equals("Farenheit")) {
                c = Double.valueOf(newFormat.format((ip - 32) * 5 / 9));
                k = Double.valueOf(newFormat.format((ip - 32 / 1.8000) + 273));
                jTextAreaResult.setText(
                        c + "\t Celcius  \n\n" + k + "\t Kelvin"
                );
            }
            if (jComboBox1.getSelectedItem().equals("Kelvin")) {
                c = Double.valueOf(newFormat.format(ip - 273.15));
                f = Double.valueOf(newFormat.format((ip - 273.15) * 1.8000 + 32.00));
                jTextAreaResult.setText(
                        c + "\t Celcius  \n\n" + f + "\t Fahrenheit"
                );
            }
        }
        if (jLabel1.getText().equals("Time")) {
            Double ns, ms, mls, s, m, h, d, w, mt, y, dc, c;
            if (jComboBox1.getSelectedItem().equals("Nanosecond")) {
                ms = Double.valueOf(newFormat.format(ip * 0.001));
                mls = Double.valueOf(newFormat.format(ip * 1e-6));
                s = Double.valueOf(newFormat.format(ip * 1e-9));
                m = Double.valueOf(newFormat.format(ip * 1.6667e-11));
                h = Double.valueOf(newFormat.format(ip * 2.7778e-13));
                d = Double.valueOf(newFormat.format(ip * 1.1574e-14));
                w = Double.valueOf(newFormat.format(ip * 1.6534e-15));
                mt = Double.valueOf(newFormat.format(ip * 3.8027e-16));
                y = Double.valueOf(newFormat.format(ip * 3.1689e-17));
                dc = Double.valueOf(newFormat.format(ip * 3.1689e-18));
                c = Double.valueOf(newFormat.format(ip * 3.1689e-19));
                jTextAreaResult.setText(
                        ms + "\t Microseconds \n\n" + mls + "\t Milliseconds \n\n" + s + "\t Seconds \n\n" + m + "\t Minutes \n\n" + h + "\t Hours \n\n"
                        + d + "\t Days \n\n" + w + "\t Week \n\n" + mt + "\t Months \n\n" + y + "\t Years \n\n" + dc + "\t Decades \n\n" + c + "\t Century"
                );
            }
            if (jComboBox1.getSelectedItem().equals("Microsecond")) {
                ns = Double.valueOf(newFormat.format(ip * 1000));
                mls = Double.valueOf(newFormat.format(ip * 0.001));
                s = Double.valueOf(newFormat.format(ip * 1e-6));
                m = Double.valueOf(newFormat.format(ip * 1.6667e-8));
                h = Double.valueOf(newFormat.format(ip * 2.7778e-10));
                d = Double.valueOf(newFormat.format(ip * 1.1574e-11));
                w = Double.valueOf(newFormat.format(ip * 1.6534e-12));
                mt = Double.valueOf(newFormat.format(ip * 3.8027e-13));
                y = Double.valueOf(newFormat.format(ip * 3.1689e-14));
                dc = Double.valueOf(newFormat.format(ip * 3.1689e-15));
                c = Double.valueOf(newFormat.format(ip * 3.1689e-16));
                jTextAreaResult.setText(
                        ns + "\t Nanoseconds \n\n" + mls + "\t Milliseconds \n\n" + s + "\t Seconds \n\n" + m + "\t Minutes \n\n" + h + "\t Hours \n\n"
                        + d + "\t Days \n\n" + w + "\t Week \n\n" + mt + "\t Months \n\n" + y + "\t Years \n\n" + dc + "\t Decades \n\n" + c + "\t Century"
                );
            }
            if (jComboBox1.getSelectedItem().equals("Millisecond")) {
                ns = Double.valueOf(newFormat.format(ip * 1e+6));
                ms = Double.valueOf(newFormat.format(ip * 1000));
                s = Double.valueOf(newFormat.format(ip * 0.001));
                m = Double.valueOf(newFormat.format(ip * 1.6667e-5));
                h = Double.valueOf(newFormat.format(ip * 2.7778e-7));
                d = Double.valueOf(newFormat.format(ip * 1.1574e-8));
                w = Double.valueOf(newFormat.format(ip * 1.6534e-9));
                mt = Double.valueOf(newFormat.format(ip * 3.8027e-10));
                y = Double.valueOf(newFormat.format(ip * 3.1689e-11));
                dc = Double.valueOf(newFormat.format(ip * 3.1689e-12));
                c = Double.valueOf(newFormat.format(ip * 3.1689e-13));
                jTextAreaResult.setText(
                        ns + "\t Nanoseconds \n\n" + ms + "\t Microseconds \n\n" + s + "\t Seconds \n\n" + m + "\t Minutes \n\n" + h + "\t Hours \n\n"
                        + d + "\t Days \n\n" + w + "\t Week \n\n" + mt + "\t Months \n\n" + y + "\t Years \n\n" + dc + "\t Decades \n\n" + c + "\t Century"
                );
            }
            if (jComboBox1.getSelectedItem().equals("Second")) {
                ns = Double.valueOf(newFormat.format(ip * 1e+9));
                ms = Double.valueOf(newFormat.format(ip * 1e+6));
                mls = Double.valueOf(newFormat.format(ip * 1000));
                m = Double.valueOf(newFormat.format(ip * 0.0166667));
                h = Double.valueOf(newFormat.format(ip * 0.000277778));
                d = Double.valueOf(newFormat.format(ip * 1.1574e-5));
                w = Double.valueOf(newFormat.format(ip * 1.6534e-6));
                mt = Double.valueOf(newFormat.format(ip * 3.8027e-7));
                y = Double.valueOf(newFormat.format(ip * 3.1689e-8));
                dc = Double.valueOf(newFormat.format(ip * 3.1689e-9));
                c = Double.valueOf(newFormat.format(ip * 3.1689e-10));
                jTextAreaResult.setText(
                        ns + "\t Nanoseconds \n\n" + ms + "\t Microseconds \n\n" + mls + "\t Milliseconds \n\n" + m + "\t Minutes \n\n" + h + "\t Hours \n\n"
                        + d + "\t Days \n\n" + w + "\t Week \n\n" + mt + "\t Months \n\n" + y + "\t Years \n\n" + dc + "\t Decades \n\n" + c + "\t Century"
                );
            }
            if (jComboBox1.getSelectedItem().equals("Minute")) {
                ns = Double.valueOf(newFormat.format(ip * 6e+10));
                ms = Double.valueOf(newFormat.format(ip * 6e+7));
                s = Double.valueOf(newFormat.format(ip * 60));
                mls = Double.valueOf(newFormat.format(ip * 60000));
                h = Double.valueOf(newFormat.format(ip * 0.0166667));
                d = Double.valueOf(newFormat.format(ip * 0.000694444));
                w = Double.valueOf(newFormat.format(ip * 9.9206e-5));
                mt = Double.valueOf(newFormat.format(ip * 2.2816e-5));
                y = Double.valueOf(newFormat.format(ip * 1.9013e-6));
                dc = Double.valueOf(newFormat.format(ip * 1.9013e-7));
                c = Double.valueOf(newFormat.format(ip * 1.9013e-8));
                jTextAreaResult.setText(
                        ns + "\t Nanoseconds \n\n" + ms + "\t Microseconds \n\n" + s + "\t Seconds \n\n" + mls + "\t Milliseconds \n\n" + h + "\t Hours \n\n"
                        + d + "\t Days \n\n" + w + "\t Week \n\n" + mt + "\t Months \n\n" + y + "\t Years \n\n" + dc + "\t Decades \n\n" + c + "\t Century"
                );
            }
            if (jComboBox1.getSelectedItem().equals("Hour")) {
                ns = Double.valueOf(newFormat.format(ip * 3.6e+12));
                ms = Double.valueOf(newFormat.format(ip * 3.6e+9));
                s = Double.valueOf(newFormat.format(ip * 3600));
                mls = Double.valueOf(newFormat.format(ip * 3.6e+6));
                m = Double.valueOf(newFormat.format(ip * 60));
                d = Double.valueOf(newFormat.format(ip * 0.0416667));
                w = Double.valueOf(newFormat.format(ip * 0.00595238));
                mt = Double.valueOf(newFormat.format(ip * 0.00136895));
                y = Double.valueOf(newFormat.format(ip * 0.00011408));
                dc = Double.valueOf(newFormat.format(ip * 1.1408e-5));
                c = Double.valueOf(newFormat.format(ip * 1.1408e-6));
                jTextAreaResult.setText(
                        ns + "\t Nanoseconds \n\n" + ms + "\t Microseconds \n\n" + s + "\t Seconds \n\n" + mls + "\t Milliseconds \n\n" + m + "\t Minutes \n\n"
                        + d + "\t Days \n\n" + w + "\t Week \n\n" + mt + "\t Months \n\n" + y + "\t Years \n\n" + dc + "\t Decades \n\n" + c + "\t Century"
                );
            }
            if (jComboBox1.getSelectedItem().equals("Day")) {
                ns = Double.valueOf(newFormat.format(ip * 8.64e+13));
                ms = Double.valueOf(newFormat.format(ip * 8.64e+10));
                s = Double.valueOf(newFormat.format(ip * 86400));
                mls = Double.valueOf(newFormat.format(ip * 8.64e+7));
                m = Double.valueOf(newFormat.format(ip * 1440));
                h = Double.valueOf(newFormat.format(ip * 24));
                w = Double.valueOf(newFormat.format(ip * 0.142857));
                mt = Double.valueOf(newFormat.format(ip * 0.0328549));
                y = Double.valueOf(newFormat.format(ip * 0.00273791));
                dc = Double.valueOf(newFormat.format(ip * 0.000273791));
                c = Double.valueOf(newFormat.format(ip * 2.7379e-5));
                jTextAreaResult.setText(
                        ns + "\t Nanoseconds \n\n" + ms + "\t Microseconds \n\n" + s + "\t Seconds \n\n" + mls + "\t Milliseconds \n\n" + m + "\t Minutes \n\n"
                        + h + "\t Hours \n\n" + w + "\t Week \n\n" + mt + "\t Months \n\n" + y + "\t Years \n\n" + dc + "\t Decades \n\n" + c + "\t Century"
                );
            }
            if (jComboBox1.getSelectedItem().equals("Week")) {
                ns = Double.valueOf(newFormat.format(ip * 6.048e+14));
                ms = Double.valueOf(newFormat.format(ip * 6.048e+11));
                s = Double.valueOf(newFormat.format(ip * 604800));
                mls = Double.valueOf(newFormat.format(ip * 6.048e+8));
                m = Double.valueOf(newFormat.format(ip * 10080));
                h = Double.valueOf(newFormat.format(ip * 168));
                d = Double.valueOf(newFormat.format(ip * 7));
                mt = Double.valueOf(newFormat.format(ip * 0.229984));
                y = Double.valueOf(newFormat.format(ip * 0.0191654));
                dc = Double.valueOf(newFormat.format(ip * 0.00191654));
                c = Double.valueOf(newFormat.format(ip * 0.000191654));
                jTextAreaResult.setText(
                        ns + "\t Nanoseconds \n\n" + ms + "\t Microseconds \n\n" + s + "\t Seconds \n\n" + mls + "\t Milliseconds \n\n" + m + "\t Minutes \n\n"
                        + h + "\t Hours \n\n" + d + "\t Days \n\n" + mt + "\t Months \n\n" + y + "\t Years \n\n" + dc + "\t Decades \n\n" + c + "\t Century"
                );
            }
            if (jComboBox1.getSelectedItem().equals("Month")) {
                ns = Double.valueOf(newFormat.format(ip * 2.63e+15));
                ms = Double.valueOf(newFormat.format(ip * 2.63e+12));
                s = Double.valueOf(newFormat.format(ip * 2.63e+6));
                mls = Double.valueOf(newFormat.format(ip * 2.63e+9));
                m = Double.valueOf(newFormat.format(ip * 43829.1));
                h = Double.valueOf(newFormat.format(ip * 730.484));
                d = Double.valueOf(newFormat.format(ip * 30.4368));
                w = Double.valueOf(newFormat.format(ip * 4.34812));
                y = Double.valueOf(newFormat.format(ip * 0.0833333));
                dc = Double.valueOf(newFormat.format(ip * 0.00833333));
                c = Double.valueOf(newFormat.format(ip * 0.000833333));
                jTextAreaResult.setText(
                        ns + "\t Nanoseconds \n\n" + ms + "\t Microseconds \n\n" + s + "\t Seconds \n\n" + mls + "\t Milliseconds \n\n" + m + "\t Minutes \n\n"
                        + h + "\t Hours \n\n" + d + "\t Days \n\n" + w + "\t Weeks \n\n" + y + "\t Years \n\n" + dc + "\t Decades \n\n" + c + "\t Century"
                );
            }
            if (jComboBox1.getSelectedItem().equals(" Year")) {
                ns = Double.valueOf(newFormat.format(ip * 3.156e+16));
                ms = Double.valueOf(newFormat.format(ip * 3.156e+13));
                s = Double.valueOf(newFormat.format(ip * 3.156e+7));
                mls = Double.valueOf(newFormat.format(ip * 3.156e+10));
                m = Double.valueOf(newFormat.format(ip * 525949));
                h = Double.valueOf(newFormat.format(ip * 8765.81));
                d = Double.valueOf(newFormat.format(ip * 365.242));
                w = Double.valueOf(newFormat.format(ip * 52.1775));
                mt = Double.valueOf(newFormat.format(ip * 12));
                dc = Double.valueOf(newFormat.format(ip * 0.1));
                c = Double.valueOf(newFormat.format(ip * 0.01));
                jTextAreaResult.setText(
                        ns + "\t Nanoseconds \n\n" + ms + "\t Microseconds \n\n" + s + "\t Seconds \n\n" + mls + "\t Milliseconds \n\n" + m + "\t Minutes \n\n"
                        + h + "\t Hours \n\n" + d + "\t Days \n\n" + w + "\t Weeks \n\n" + mt + "\t Months \n\n" + dc + "\t Decades \n\n" + c + "\t Century"
                );
            }
            if (jComboBox1.getSelectedItem().equals("Decade")) {
                ns = Double.valueOf(newFormat.format(ip * 3.156e+17));
                ms = Double.valueOf(newFormat.format(ip * 3.156e+14));
                s = Double.valueOf(newFormat.format(ip * 3.156e+8));
                mls = Double.valueOf(newFormat.format(ip * 3.156e+11));
                m = Double.valueOf(newFormat.format(ip * 5.259e+6));
                h = Double.valueOf(newFormat.format(ip * 87658.1));
                d = Double.valueOf(newFormat.format(ip * 3652.42));
                w = Double.valueOf(newFormat.format(ip * 521.775));
                mt = Double.valueOf(newFormat.format(ip * 120));
                y = Double.valueOf(newFormat.format(ip * 10));
                c = Double.valueOf(newFormat.format(ip * 0.1));
                jTextAreaResult.setText(
                        ns + "\t Nanoseconds \n\n" + ms + "\t Microseconds \n\n" + s + "\t Seconds \n\n" + mls + "\t Milliseconds \n\n" + m + "\t Minutes \n\n"
                        + h + "\t Hours \n\n" + d + "\t Days \n\n" + w + "\t Weeks \n\n" + mt + "\t Months \n\n" + y + "\t Years \n\n" + c + "\t Century"
                );
            }
            if (jComboBox1.getSelectedItem().equals("Century")) {
                ns = Double.valueOf(newFormat.format(ip * 3.156e+18));
                ms = Double.valueOf(newFormat.format(ip * 3.156e+15));
                s = Double.valueOf(newFormat.format(ip * 3.156e+9));
                mls = Double.valueOf(newFormat.format(ip * 3.156e+12));
                m = Double.valueOf(newFormat.format(ip * 5.259e+7));
                h = Double.valueOf(newFormat.format(ip * 876581));
                d = Double.valueOf(newFormat.format(ip * 36524.2));
                w = Double.valueOf(newFormat.format(ip * 5217.75));
                mt = Double.valueOf(newFormat.format(ip * 1200));
                y = Double.valueOf(newFormat.format(ip * 100));
                dc = Double.valueOf(newFormat.format(ip * 10));
                jTextAreaResult.setText(
                        ns + "\t Nanoseconds \n\n" + ms + "\t Microseconds \n\n" + s + "\t Seconds \n\n" + mls + "\t Milliseconds \n\n" + m + "\t Minutes \n\n"
                        + h + "\t Hours \n\n" + d + "\t Days \n\n" + w + "\t Weeks \n\n" + mt + "\t Months \n\n" + y + "\t Years \n\n" + dc + "\t Decade"
                );
            }
        }
        if (jLabel1.getText().equals("Volume")) {
            Double USg, USq, USp, USc, USo, USt, USts, cm, l, ml, Ig, Iq, Ip, Io, It, Its, cf, ci;
            if (jComboBox1.getSelectedItem().equals("US gal")) {
                USq = Double.valueOf(newFormat.format(ip * 4));
                USp = Double.valueOf(newFormat.format(ip * 8));
                USc = Double.valueOf(newFormat.format(ip * 16));
                USo = Double.valueOf(newFormat.format(ip * 128));
                USt = Double.valueOf(newFormat.format(ip * 256));
                USts = Double.valueOf(newFormat.format(ip * 768));
                cm = Double.valueOf(newFormat.format(ip * 0.00378541));
                l = Double.valueOf(newFormat.format(ip * 3.78541));
                ml = Double.valueOf(newFormat.format(ip * 3785.41));
                Ig = Double.valueOf(newFormat.format(ip * 0.832674));
                Iq = Double.valueOf(newFormat.format(ip * 3.3307));
                Ip = Double.valueOf(newFormat.format(ip * 6.66139));
                Io = Double.valueOf(newFormat.format(ip * 133.228));
                It = Double.valueOf(newFormat.format(ip * 213.165));
                Its = Double.valueOf(newFormat.format(ip * 639.494));
                cf = Double.valueOf(newFormat.format(ip * 0.133681));
                ci = Double.valueOf(newFormat.format(ip * 231));
                jTextAreaResult.setText(
                        USq + "\t US quart\n\n" + USp + "\t US pint \n\n" + USc + "\t US cup \n\n" + USo + "\t US oz\n\n" + USt + "\t US tbsp. \n\n"
                        + USts + "\t US tsp. \n\n" + cm + "\t Cubic meters \n\n" + l + "\t Liters \n\n" + ml + "\t Milliliters \n\n"
                        + Ig + "\t Imperial gal \n\n" + Iq + "\t Imperial quarts \n\n" + Ip + "\t Imperial pints \n\n" + Io + "\t Imperial oz \n\n"
                        + It + "\t Imperial tbsp. \n\n" + Its + "\t Imperial tsp. \n\n" + cf + "\t Cubic foot \n\n" + ci + "\t Cubic inch \n\n"
                );

            }
            if (jComboBox1.getSelectedItem().equals("US quart")) {
                USg = Double.valueOf(newFormat.format(ip * 0.25));
                USp = Double.valueOf(newFormat.format(ip * 2));
                USc = Double.valueOf(newFormat.format(ip * 4));
                USo = Double.valueOf(newFormat.format(ip * 32));
                USt = Double.valueOf(newFormat.format(ip * 64));
                USts = Double.valueOf(newFormat.format(ip * 192));
                cm = Double.valueOf(newFormat.format(ip * 0.000946353));
                l = Double.valueOf(newFormat.format(ip * 0.946353));
                ml = Double.valueOf(newFormat.format(ip * 946.353));
                Ig = Double.valueOf(newFormat.format(ip * 0.208168));
                Iq = Double.valueOf(newFormat.format(ip * 0.832674));
                Ip = Double.valueOf(newFormat.format(ip * 1.66535));
                Io = Double.valueOf(newFormat.format(ip * 33.307));
                It = Double.valueOf(newFormat.format(ip * 53.2911));
                Its = Double.valueOf(newFormat.format(ip * 159.873));
                cf = Double.valueOf(newFormat.format(ip * 0.0334201));
                ci = Double.valueOf(newFormat.format(ip * 57.75));
                jTextAreaResult.setText(
                        USg + "\t US gal \n\n" + USp + "\t US pint \n\n" + USc + "\t US cup \n\n" + USo + "\t US oz\n\n" + USt + "\t US tbsp. \n\n"
                        + USts + "\t US tsp. \n\n" + cm + "\t Cubic meters \n\n" + l + "\t Liters \n\n" + ml + "\t Milliliters \n\n"
                        + Ig + "\t Imperial gal \n\n" + Iq + "\t Imperial quarts \n\n" + Ip + "\t Imperial pints \n\n" + Io + "\t Imperial oz \n\n"
                        + It + "\t Imperial tbsp. \n\n" + Its + "\t Imperial tsp. \n\n" + cf + "\t Cubic foot \n\n" + ci + "\t Cubic inch \n\n"
                );

            }
            if (jComboBox1.getSelectedItem().equals("US pint")) {
                USg = Double.valueOf(newFormat.format(ip * 0.125));
                USq = Double.valueOf(newFormat.format(ip * 0.5));
                USc = Double.valueOf(newFormat.format(ip * 2));
                USo = Double.valueOf(newFormat.format(ip * 16));
                USt = Double.valueOf(newFormat.format(ip * 32));
                USts = Double.valueOf(newFormat.format(ip * 96));
                cm = Double.valueOf(newFormat.format(ip * 0.000473176));
                l = Double.valueOf(newFormat.format(ip * 0.473176));
                ml = Double.valueOf(newFormat.format(ip * 473.176));
                Ig = Double.valueOf(newFormat.format(ip * 0.104084));
                Iq = Double.valueOf(newFormat.format(ip * 0.416337));
                Ip = Double.valueOf(newFormat.format(ip * 0.832674));
                Io = Double.valueOf(newFormat.format(ip * 16.6535));
                It = Double.valueOf(newFormat.format(ip * 26.6456));
                Its = Double.valueOf(newFormat.format(ip * 79.9367));
                cf = Double.valueOf(newFormat.format(ip * 0.0167101));
                ci = Double.valueOf(newFormat.format(ip * 28.875));
                jTextAreaResult.setText(
                        USg + "\t US gal \n\n" + USq + "\t US quarts \n\n" + USc + "\t US cup \n\n" + USo + "\t US oz\n\n" + USt + "\t US tbsp. \n\n"
                        + USts + "\t US tsp. \n\n" + cm + "\t Cubic meters \n\n" + l + "\t Liters \n\n" + ml + "\t Milliliters \n\n"
                        + Ig + "\t Imperial gal \n\n" + Iq + "\t Imperial quarts \n\n" + Ip + "\t Imperial pints \n\n" + Io + "\t Imperial oz \n\n"
                        + It + "\t Imperial tbsp. \n\n" + Its + "\t Imperial tsp. \n\n" + cf + "\t Cubic foot \n\n" + ci + "\t Cubic inch \n\n"
                );

            }
            if (jComboBox1.getSelectedItem().equals("US oz")) {
                USg = Double.valueOf(newFormat.format(ip * 0.0078125));
                USq = Double.valueOf(newFormat.format(ip * 0.03125));
                USp = Double.valueOf(newFormat.format(ip * 0.0625));
                USc = Double.valueOf(newFormat.format(ip * 0.125));
                USt = Double.valueOf(newFormat.format(ip * 2));
                USts = Double.valueOf(newFormat.format(ip * 6));
                cm = Double.valueOf(newFormat.format(ip * 2.9574e-5));
                l = Double.valueOf(newFormat.format(ip * 0.0295735));
                ml = Double.valueOf(newFormat.format(ip * 29.5735));
                Ig = Double.valueOf(newFormat.format(ip * 0.00650526));
                Iq = Double.valueOf(newFormat.format(ip * 0.0260211));
                Ip = Double.valueOf(newFormat.format(ip * 0.0520421));
                Io = Double.valueOf(newFormat.format(ip * 1.04084));
                It = Double.valueOf(newFormat.format(ip * 1.66535));
                Its = Double.valueOf(newFormat.format(ip * 4.99604));
                cf = Double.valueOf(newFormat.format(ip * 0.00104438));
                ci = Double.valueOf(newFormat.format(ip * 1.80469));
                jTextAreaResult.setText(
                        USg + "\t US gal \n\n" + USq + "\t US quarts \n\n" + USp + "\t US pint \n\n" + USc + "\t US cup\n\n" + USt + "\t US tbsp. \n\n"
                        + USts + "\t US tsp. \n\n" + cm + "\t Cubic meters \n\n" + l + "\t Liters \n\n" + ml + "\t Milliliters \n\n"
                        + Ig + "\t Imperial gal \n\n" + Iq + "\t Imperial quarts \n\n" + Ip + "\t Imperial pints \n\n" + Io + "\t Imperial oz \n\n"
                        + It + "\t Imperial tbsp. \n\n" + Its + "\t Imperial tsp. \n\n" + cf + "\t Cubic foot \n\n" + ci + "\t Cubic inch \n\n"
                );

            }
            if (jComboBox1.getSelectedItem().equals("US cup")) {
                USg = Double.valueOf(newFormat.format(ip * 0.0625));
                USq = Double.valueOf(newFormat.format(ip * 0.25));
                USp = Double.valueOf(newFormat.format(ip * 0.5));
                USo = Double.valueOf(newFormat.format(ip * 8));
                USt = Double.valueOf(newFormat.format(ip * 16));
                USts = Double.valueOf(newFormat.format(ip * 48));
                cm = Double.valueOf(newFormat.format(ip * 0.000236588));
                l = Double.valueOf(newFormat.format(ip * 0.236588));
                ml = Double.valueOf(newFormat.format(ip * 236.588));
                Ig = Double.valueOf(newFormat.format(ip * 0.0520421));
                Iq = Double.valueOf(newFormat.format(ip * 0.208168));
                Ip = Double.valueOf(newFormat.format(ip * 0.416337));
                Io = Double.valueOf(newFormat.format(ip * 8.32674));
                It = Double.valueOf(newFormat.format(ip * 13.3228));
                Its = Double.valueOf(newFormat.format(ip * 39.9683));
                cf = Double.valueOf(newFormat.format(ip * 0.00835503));
                ci = Double.valueOf(newFormat.format(ip * 14.4375));
                jTextAreaResult.setText(
                        USg + "\t US gal \n\n" + USq + "\t US quarts \n\n" + USp + "\t US pint \n\n" + USo + "\t US oz\n\n" + USt + "\t US tbsp. \n\n"
                        + USts + "\t US tsp. \n\n" + cm + "\t Cubic meters \n\n" + l + "\t Liters \n\n" + ml + "\t Milliliters \n\n"
                        + Ig + "\t Imperial gal \n\n" + Iq + "\t Imperial quarts \n\n" + Ip + "\t Imperial pints \n\n" + Io + "\t Imperial oz \n\n"
                        + It + "\t Imperial tbsp. \n\n" + Its + "\t Imperial tsp. \n\n" + cf + "\t Cubic foot \n\n" + ci + "\t Cubic inch \n\n"
                );

            }
            if (jComboBox1.getSelectedItem().equals("US tbsp.")) {
                USg = Double.valueOf(newFormat.format(ip * 0.00390625));
                USq = Double.valueOf(newFormat.format(ip * 0.015625));
                USp = Double.valueOf(newFormat.format(ip * 0.03125));
                USo = Double.valueOf(newFormat.format(ip * 0.5));
                USc = Double.valueOf(newFormat.format(ip * 0.0625));
                USts = Double.valueOf(newFormat.format(ip * 3));
                cm = Double.valueOf(newFormat.format(ip * 1.4787e-5));
                l = Double.valueOf(newFormat.format(ip * 0.0147868));
                ml = Double.valueOf(newFormat.format(ip * 14.7868));
                Ig = Double.valueOf(newFormat.format(ip * 0.00325263));
                Iq = Double.valueOf(newFormat.format(ip * 0.0130105));
                Ip = Double.valueOf(newFormat.format(ip * 0.0260211));
                Io = Double.valueOf(newFormat.format(ip * 0.520421));
                It = Double.valueOf(newFormat.format(ip * 0.832674));
                Its = Double.valueOf(newFormat.format(ip * 2.49802));
                cf = Double.valueOf(newFormat.format(ip * 0.00052219));
                ci = Double.valueOf(newFormat.format(ip * 0.902344));
                jTextAreaResult.setText(
                        USg + "\t US gal \n\n" + USq + "\t US quarts \n\n" + USp + "\t US pint \n\n" + USo + "\t US oz\n\n" + USc + "\t US cup \n\n"
                        + USts + "\t US tsp. \n\n" + cm + "\t Cubic meters \n\n" + l + "\t Liters \n\n" + ml + "\t Milliliters \n\n"
                        + Ig + "\t Imperial gal \n\n" + Iq + "\t Imperial quarts \n\n" + Ip + "\t Imperial pints \n\n" + Io + "\t Imperial oz \n\n"
                        + It + "\t Imperial tbsp. \n\n" + Its + "\t Imperial tsp. \n\n" + cf + "\t Cubic foot \n\n" + ci + "\t Cubic inch \n\n"
                );

            }
            if (jComboBox1.getSelectedItem().equals("US tsp.")) {
                USg = Double.valueOf(newFormat.format(ip * 0.00130208));
                USq = Double.valueOf(newFormat.format(ip * 0.00520833));
                USp = Double.valueOf(newFormat.format(ip * 0.0104167));
                USo = Double.valueOf(newFormat.format(ip * 0.0208333));
                USc = Double.valueOf(newFormat.format(ip * 0.166667));
                USt = Double.valueOf(newFormat.format(ip * 0.333333));
                cm = Double.valueOf(newFormat.format(ip * 4.9289e-6));
                l = Double.valueOf(newFormat.format(ip * 0.00492892));
                ml = Double.valueOf(newFormat.format(ip * 4.92892));
                Ig = Double.valueOf(newFormat.format(ip * 0.00108421));
                Iq = Double.valueOf(newFormat.format(ip * 0.00433684));
                Ip = Double.valueOf(newFormat.format(ip * 0.00867369));
                Io = Double.valueOf(newFormat.format(ip * 0.173474));
                It = Double.valueOf(newFormat.format(ip * 0.277558));
                Its = Double.valueOf(newFormat.format(ip * 0.832674));
                cf = Double.valueOf(newFormat.format(ip * 0.000174063));
                ci = Double.valueOf(newFormat.format(ip * 0.300781));
                jTextAreaResult.setText(
                        USg + "\t US gal \n\n" + USq + "\t US quarts \n\n" + USp + "\t US pint \n\n" + USo + "\t US oz\n\n" + USc + "\t US cup \n\n"
                        + USt + "\t US tbsp. \n\n" + cm + "\t Cubic meters \n\n" + l + "\t Liters \n\n" + ml + "\t Milliliters \n\n"
                        + Ig + "\t Imperial gal \n\n" + Iq + "\t Imperial quarts \n\n" + Ip + "\t Imperial pints \n\n" + Io + "\t Imperial oz \n\n"
                        + It + "\t Imperial tbsp. \n\n" + Its + "\t Imperial tsp. \n\n" + cf + "\t Cubic foot \n\n" + ci + "\t Cubic inch \n\n"
                );

            }
            if (jComboBox1.getSelectedItem().equals("Cubic meter")) {
                USg = Double.valueOf(newFormat.format(ip * 264.172));
                USq = Double.valueOf(newFormat.format(ip * 1056.69));
                USp = Double.valueOf(newFormat.format(ip * 2113.38));
                USo = Double.valueOf(newFormat.format(ip * 33814));
                USc = Double.valueOf(newFormat.format(ip * 4226.75));
                USt = Double.valueOf(newFormat.format(ip * 67628));
                USts = Double.valueOf(newFormat.format(ip * 202884));
                l = Double.valueOf(newFormat.format(ip * 1000));
                ml = Double.valueOf(newFormat.format(ip * 1e+6));
                Ig = Double.valueOf(newFormat.format(ip * 219.969));
                Iq = Double.valueOf(newFormat.format(ip * 879.877));
                Ip = Double.valueOf(newFormat.format(ip * 1759.75));
                Io = Double.valueOf(newFormat.format(ip * 35195.1));
                It = Double.valueOf(newFormat.format(ip * 56312.1));
                Its = Double.valueOf(newFormat.format(ip * 168936));
                cf = Double.valueOf(newFormat.format(ip * 35.3147));
                ci = Double.valueOf(newFormat.format(ip * 61023.7));
                jTextAreaResult.setText(
                        USg + "\t US gal \n\n" + USq + "\t US quarts \n\n" + USp + "\t US pint \n\n" + USo + "\t US oz\n\n" + USc + "\t US cup \n\n"
                        + USt + "\t US tbsp. \n\n" + USts + "\t tsp. \n\n" + l + "\t Liters \n\n" + ml + "\t Milliliters \n\n"
                        + Ig + "\t Imperial gal \n\n" + Iq + "\t Imperial quarts \n\n" + Ip + "\t Imperial pints \n\n" + Io + "\t Imperial oz \n\n"
                        + It + "\t Imperial tbsp. \n\n" + Its + "\t Imperial tsp. \n\n" + cf + "\t Cubic foot \n\n" + ci + "\t Cubic inch \n\n"
                );

            }
            if (jComboBox1.getSelectedItem().equals("Liter")) {
                USg = Double.valueOf(newFormat.format(ip * 0.264172));
                USq = Double.valueOf(newFormat.format(ip * 1.05669));
                USp = Double.valueOf(newFormat.format(ip * 2.11338));
                USo = Double.valueOf(newFormat.format(ip * 33.814));
                USc = Double.valueOf(newFormat.format(ip * 4.2267));
                USt = Double.valueOf(newFormat.format(ip * 67.628));
                USts = Double.valueOf(newFormat.format(ip * 202.884));
                cm = Double.valueOf(newFormat.format(ip * 0.001));
                ml = Double.valueOf(newFormat.format(ip * 1000));
                Ig = Double.valueOf(newFormat.format(ip * 0.219969));
                Iq = Double.valueOf(newFormat.format(ip * 0.879877));
                Ip = Double.valueOf(newFormat.format(ip * 1.75975));
                Io = Double.valueOf(newFormat.format(ip * 35.1951));
                It = Double.valueOf(newFormat.format(ip * 56.3121));
                Its = Double.valueOf(newFormat.format(ip * 168.936));
                cf = Double.valueOf(newFormat.format(ip * 0.0353147));
                ci = Double.valueOf(newFormat.format(ip * 61.0237));
                jTextAreaResult.setText(
                        USg + "\t US gal \n\n" + USq + "\t US quarts \n\n" + USp + "\t US pint \n\n" + USo + "\t US oz\n\n" + USc + "\t US cup \n\n"
                        + USt + "\t US tbsp. \n\n" + USts + "\t tsp. \n\n" + cm + "\t Cubic meters \n\n" + ml + "\t Milliliters \n\n"
                        + Ig + "\t Imperial gal \n\n" + Iq + "\t Imperial quarts \n\n" + Ip + "\t Imperial pints \n\n" + Io + "\t Imperial oz \n\n"
                        + It + "\t Imperial tbsp. \n\n" + Its + "\t Imperial tsp. \n\n" + cf + "\t Cubic foot \n\n" + ci + "\t Cubic inch \n\n"
                );

            }
            if (jComboBox1.getSelectedItem().equals("Milliliter")) {
                USg = Double.valueOf(newFormat.format(ip * 0.000264172));
                USq = Double.valueOf(newFormat.format(ip * 0.00105669));
                USp = Double.valueOf(newFormat.format(ip * 0.00211338));
                USo = Double.valueOf(newFormat.format(ip * 0.033814));
                USc = Double.valueOf(newFormat.format(ip * 0.00422675));
                USt = Double.valueOf(newFormat.format(ip * 0.067628));
                USts = Double.valueOf(newFormat.format(ip * 0.202884));
                cm = Double.valueOf(newFormat.format(ip * 1e-6));
                l = Double.valueOf(newFormat.format(ip * 0.001));
                Ig = Double.valueOf(newFormat.format(ip * 0.000219969));
                Iq = Double.valueOf(newFormat.format(ip * 0.000879877));
                Ip = Double.valueOf(newFormat.format(ip * 0.00175975));
                Io = Double.valueOf(newFormat.format(ip * 0.0351951));
                It = Double.valueOf(newFormat.format(ip * 0.0563121));
                Its = Double.valueOf(newFormat.format(ip * 0.168936));
                cf = Double.valueOf(newFormat.format(ip * 3.5315e-5));
                ci = Double.valueOf(newFormat.format(ip * 0.0610237));
                jTextAreaResult.setText(
                        USg + "\t US gal \n\n" + USq + "\t US quarts \n\n" + USp + "\t US pint \n\n" + USo + "\t US oz\n\n" + USc + "\t US cup \n\n"
                        + USt + "\t US tbsp. \n\n" + USts + "\t tsp. \n\n" + cm + "\t Cubic meters \n\n" + l + "\t Liters \n\n"
                        + Ig + "\t Imperial gal \n\n" + Iq + "\t Imperial quarts \n\n" + Ip + "\t Imperial pints \n\n" + Io + "\t Imperial oz \n\n"
                        + It + "\t Imperial tbsp. \n\n" + Its + "\t Imperial tsp. \n\n" + cf + "\t Cubic foot \n\n" + ci + "\t Cubic inch \n\n"
                );

            }
            if (jComboBox1.getSelectedItem().equals("Imperial gal")) {
                USg = Double.valueOf(newFormat.format(ip * 1.20095));
                USq = Double.valueOf(newFormat.format(ip * 4.8038));
                USp = Double.valueOf(newFormat.format(ip * 9.6076));
                USo = Double.valueOf(newFormat.format(ip * 153.722));
                USc = Double.valueOf(newFormat.format(ip * 19.2152));
                USt = Double.valueOf(newFormat.format(ip * 307.443));
                USts = Double.valueOf(newFormat.format(ip * 922.33));
                cm = Double.valueOf(newFormat.format(ip * 0.00454609));
                l = Double.valueOf(newFormat.format(ip * 4.54609));
                ml = Double.valueOf(newFormat.format(ip * 4546.09));
                Iq = Double.valueOf(newFormat.format(ip * 4));
                Ip = Double.valueOf(newFormat.format(ip * 8));
                Io = Double.valueOf(newFormat.format(ip * 160));
                It = Double.valueOf(newFormat.format(ip * 256));
                Its = Double.valueOf(newFormat.format(ip * 768));
                cf = Double.valueOf(newFormat.format(ip * 0.160544));
                ci = Double.valueOf(newFormat.format(ip * 277.42));
                jTextAreaResult.setText(
                        USg + "\t US gal \n\n" + USq + "\t US quarts \n\n" + USp + "\t US pint \n\n" + USo + "\t US oz\n\n" + USc + "\t US cup \n\n"
                        + USt + "\t US tbsp. \n\n" + USts + "\t tsp. \n\n" + cm + "\t Cubic meters \n\n" + l + "\t Liters \n\n"
                        + ml + "\t Milliliters \n\n" + Iq + "\t Imperial quarts \n\n" + Ip + "\t Imperial pints \n\n" + Io + "\t Imperial oz \n\n"
                        + It + "\t Imperial tbsp. \n\n" + Its + "\t Imperial tsp. \n\n" + cf + "\t Cubic foot \n\n" + ci + "\t Cubic inch \n\n"
                );

            }
            if (jComboBox1.getSelectedItem().equals("Imperial quart")) {
                USg = Double.valueOf(newFormat.format(ip * 0.300238));
                USq = Double.valueOf(newFormat.format(ip * 1.20095));
                USp = Double.valueOf(newFormat.format(ip * 2.4019));
                USo = Double.valueOf(newFormat.format(ip * 38.4304));
                USc = Double.valueOf(newFormat.format(ip * 4.8038));
                USt = Double.valueOf(newFormat.format(ip * 76.8608));
                USts = Double.valueOf(newFormat.format(ip * 230.582));
                cm = Double.valueOf(newFormat.format(ip * 0.00113652));
                l = Double.valueOf(newFormat.format(ip * 1.13652));
                ml = Double.valueOf(newFormat.format(ip * 1136.52));
                Ig = Double.valueOf(newFormat.format(ip * 0.25));
                Ip = Double.valueOf(newFormat.format(ip * 2));
                Io = Double.valueOf(newFormat.format(ip * 40));
                It = Double.valueOf(newFormat.format(ip * 64));
                Its = Double.valueOf(newFormat.format(ip * 192));
                cf = Double.valueOf(newFormat.format(ip * 0.0401359));
                ci = Double.valueOf(newFormat.format(ip * 69.3549));
                jTextAreaResult.setText(
                        USg + "\t US gal \n\n" + USq + "\t US quarts \n\n" + USp + "\t US pint \n\n" + USo + "\t US oz\n\n" + USc + "\t US cup \n\n"
                        + USt + "\t US tbsp. \n\n" + USts + "\t tsp. \n\n" + cm + "\t Cubic meters \n\n" + l + "\t Liters \n\n"
                        + ml + "\t Milliliters \n\n" + Ig + "\t Imperial gal \n\n" + Ip + "\t Imperial pints \n\n" + Io + "\t Imperial oz \n\n"
                        + It + "\t Imperial tbsp. \n\n" + Its + "\t Imperial tsp. \n\n" + cf + "\t Cubic foot \n\n" + ci + "\t Cubic inch \n\n"
                );

            }
            if (jComboBox1.getSelectedItem().equals("Imperial pint")) {
                USg = Double.valueOf(newFormat.format(ip * 0.150119));
                USq = Double.valueOf(newFormat.format(ip * 0.600475));
                USp = Double.valueOf(newFormat.format(ip * 1.20095));
                USo = Double.valueOf(newFormat.format(ip * 19.2152));
                USc = Double.valueOf(newFormat.format(ip * 2.4019));
                USt = Double.valueOf(newFormat.format(ip * 38.4304));
                USts = Double.valueOf(newFormat.format(ip * 115.291));
                cm = Double.valueOf(newFormat.format(ip * 0.000568261));
                l = Double.valueOf(newFormat.format(ip * 0.568261));
                ml = Double.valueOf(newFormat.format(ip * 568.261));
                Ig = Double.valueOf(newFormat.format(ip * 0.125));
                Iq = Double.valueOf(newFormat.format(ip * 0.5));
                Io = Double.valueOf(newFormat.format(ip * 20));
                It = Double.valueOf(newFormat.format(ip * 32));
                Its = Double.valueOf(newFormat.format(ip * 96));
                cf = Double.valueOf(newFormat.format(ip * 0.020068));
                ci = Double.valueOf(newFormat.format(ip * 34.6774));
                jTextAreaResult.setText(
                        USg + "\t US gal \n\n" + USq + "\t US quarts \n\n" + USp + "\t US pint \n\n" + USo + "\t US oz\n\n" + USc + "\t US cup \n\n"
                        + USt + "\t US tbsp. \n\n" + USts + "\t tsp. \n\n" + cm + "\t Cubic meters \n\n" + l + "\t Liters \n\n"
                        + ml + "\t Milliliters \n\n" + Ig + "\t Imperial gal \n\n" + Iq + "\t Imperial quarts \n\n" + Io + "\t Imperial oz \n\n"
                        + It + "\t Imperial tbsp. \n\n" + Its + "\t Imperial tsp. \n\n" + cf + "\t Cubic foot \n\n" + ci + "\t Cubic inch \n\n"
                );

            }
            if (jComboBox1.getSelectedItem().equals("Imperial oz")) {
                USg = Double.valueOf(newFormat.format(ip * 0.00750594));
                USq = Double.valueOf(newFormat.format(ip * 0.0300238));
                USp = Double.valueOf(newFormat.format(ip * 0.0600475));
                USo = Double.valueOf(newFormat.format(ip * 0.96076));
                USc = Double.valueOf(newFormat.format(ip * 0.120095));
                USt = Double.valueOf(newFormat.format(ip * 1.92152));
                USts = Double.valueOf(newFormat.format(ip * 5.76456));
                cm = Double.valueOf(newFormat.format(ip * 2.8413e-5));
                l = Double.valueOf(newFormat.format(ip * 0.0284131));
                ml = Double.valueOf(newFormat.format(ip * 28.4131));
                Ig = Double.valueOf(newFormat.format(ip * 0.00625));
                Iq = Double.valueOf(newFormat.format(ip * 0.025));
                Ip = Double.valueOf(newFormat.format(ip * 0.05));
                It = Double.valueOf(newFormat.format(ip * 1.6));
                Its = Double.valueOf(newFormat.format(ip * 4.8));
                cf = Double.valueOf(newFormat.format(ip * 0.0010034));
                ci = Double.valueOf(newFormat.format(ip * 1.73387));
                jTextAreaResult.setText(
                        USg + "\t US gal \n\n" + USq + "\t US quarts \n\n" + USp + "\t US pint \n\n" + USo + "\t US oz\n\n" + USc + "\t US cup \n\n"
                        + USt + "\t US tbsp. \n\n" + USts + "\t tsp. \n\n" + cm + "\t Cubic meters \n\n" + l + "\t Liters \n\n"
                        + ml + "\t Milliliters \n\n" + Ig + "\t Imperial gal \n\n" + Iq + "\t Imperial quarts \n\n" + Ip + "\t Imperial pint \n\n"
                        + It + "\t Imperial tbsp. \n\n" + Its + "\t Imperial tsp. \n\n" + cf + "\t Cubic foot \n\n" + ci + "\t Cubic inch \n\n"
                );

            }
            if (jComboBox1.getSelectedItem().equals("Imperial tbsp.")) {
                USg = Double.valueOf(newFormat.format(ip * 0.00469121));
                USq = Double.valueOf(newFormat.format(ip * 0.0187649));
                USp = Double.valueOf(newFormat.format(ip * 0.0375297));
                USo = Double.valueOf(newFormat.format(ip * 0.600475));
                USc = Double.valueOf(newFormat.format(ip * 0.0750594));
                USt = Double.valueOf(newFormat.format(ip * 1.20095));
                USts = Double.valueOf(newFormat.format(ip * 3.60285));
                cm = Double.valueOf(newFormat.format(ip * 1.7758e-5));
                l = Double.valueOf(newFormat.format(ip * 0.0177582));
                ml = Double.valueOf(newFormat.format(ip * 17.7582));
                Ig = Double.valueOf(newFormat.format(ip * 0.00390625));
                Iq = Double.valueOf(newFormat.format(ip * 0.015625));
                Ip = Double.valueOf(newFormat.format(ip * 0.03125));
                Io = Double.valueOf(newFormat.format(ip * 0.625));
                Its = Double.valueOf(newFormat.format(ip * 3));
                cf = Double.valueOf(newFormat.format(ip * 0.000627124));
                ci = Double.valueOf(newFormat.format(ip * 1.08367));
                jTextAreaResult.setText(
                        USg + "\t US gal \n\n" + USq + "\t US quarts \n\n" + USp + "\t US pint \n\n" + USo + "\t US oz\n\n" + USc + "\t US cup \n\n"
                        + USt + "\t US tbsp. \n\n" + USts + "\t tsp. \n\n" + cm + "\t Cubic meters \n\n" + l + "\t Liters \n\n"
                        + ml + "\t Milliliters \n\n" + Ig + "\t Imperial gal \n\n" + Iq + "\t Imperial quarts \n\n" + Ip + "\t Imperial pint \n\n"
                        + Io + "\t Imperial oz \n\n" + Its + "\t Imperial tsp. \n\n" + cf + "\t Cubic foot \n\n" + ci + "\t Cubic inch \n\n"
                );

            }
            if (jComboBox1.getSelectedItem().equals("Imperial tsp.")) {
                USg = Double.valueOf(newFormat.format(ip * 0.00156374));
                USq = Double.valueOf(newFormat.format(ip * 0.00625495));
                USp = Double.valueOf(newFormat.format(ip * 0.0125099));
                USo = Double.valueOf(newFormat.format(ip * 0.200158));
                USc = Double.valueOf(newFormat.format(ip * 0.0250198));
                USt = Double.valueOf(newFormat.format(ip * 0.400317));
                USts = Double.valueOf(newFormat.format(ip * 1.20095));
                cm = Double.valueOf(newFormat.format(ip * 5.9194e-6));
                l = Double.valueOf(newFormat.format(ip * 0.00591939));
                ml = Double.valueOf(newFormat.format(ip * 5.91939));
                Ig = Double.valueOf(newFormat.format(ip * 0.00130208));
                Iq = Double.valueOf(newFormat.format(ip * 0.00520833));
                Ip = Double.valueOf(newFormat.format(ip * 0.0104167));
                Io = Double.valueOf(newFormat.format(ip * 0.208333));
                It = Double.valueOf(newFormat.format(ip * 0.333333));
                cf = Double.valueOf(newFormat.format(ip * 0.000209041));
                ci = Double.valueOf(newFormat.format(ip * 0.361223));
                jTextAreaResult.setText(
                        USg + "\t US gal \n\n" + USq + "\t US quarts \n\n" + USp + "\t US pint \n\n" + USo + "\t US oz\n\n" + USc + "\t US cup \n\n"
                        + USt + "\t US tbsp. \n\n" + USts + "\t tsp. \n\n" + cm + "\t Cubic meters \n\n" + l + "\t Liters \n\n"
                        + ml + "\t Milliliters \n\n" + Ig + "\t Imperial gal \n\n" + Iq + "\t Imperial quarts \n\n" + Ip + "\t Imperial pint \n\n"
                        + Io + "\t Imperial oz \n\n" + It + "\t Imperial tbsp. \n\n" + cf + "\t Cubic foot \n\n" + ci + "\t Cubic inch \n\n"
                );

            }
            if (jComboBox1.getSelectedItem().equals("Cubic foot")) {
                USg = Double.valueOf(newFormat.format(ip * 7.48052));
                USq = Double.valueOf(newFormat.format(ip * 29.9221));
                USp = Double.valueOf(newFormat.format(ip * 59.8442));
                USo = Double.valueOf(newFormat.format(ip * 957.506));
                USc = Double.valueOf(newFormat.format(ip * 119.688));
                USt = Double.valueOf(newFormat.format(ip * 1915.01));
                USts = Double.valueOf(newFormat.format(ip * 5745.04));
                cm = Double.valueOf(newFormat.format(ip * 0.0283168));
                l = Double.valueOf(newFormat.format(ip * 28.3168));
                ml = Double.valueOf(newFormat.format(ip * 28316.8));
                Ig = Double.valueOf(newFormat.format(ip * 6.22883));
                Iq = Double.valueOf(newFormat.format(ip * 24.9153));
                Ip = Double.valueOf(newFormat.format(ip * 49.8307));
                Io = Double.valueOf(newFormat.format(ip * 996.613));
                It = Double.valueOf(newFormat.format(ip * 1594.58));
                Its = Double.valueOf(newFormat.format(ip * 4783.74));
                ci = Double.valueOf(newFormat.format(ip * 1728));
                jTextAreaResult.setText(
                        USg + "\t US gal \n\n" + USq + "\t US quarts \n\n" + USp + "\t US pint \n\n" + USo + "\t US oz\n\n" + USc + "\t US cup \n\n"
                        + USt + "\t US tbsp. \n\n" + USts + "\t tsp. \n\n" + cm + "\t Cubic meters \n\n" + l + "\t Liters \n\n"
                        + ml + "\t Milliliters \n\n" + Ig + "\t Imperial gal \n\n" + Iq + "\t Imperial quarts \n\n" + Ip + "\t Imperial pint \n\n"
                        + Io + "\t Imperial oz \n\n" + It + "\t Imperial tbsp. \n\n" + Its + "\t Imperial tsp. \n\n" + ci + "\t Cubic inch \n\n"
                );

            }
            if (jComboBox1.getSelectedItem().equals("Cubic inch")) {
                USg = Double.valueOf(newFormat.format(ip * 0.004329));
                USq = Double.valueOf(newFormat.format(ip * 0.017316));
                USp = Double.valueOf(newFormat.format(ip * 0.034632));
                USo = Double.valueOf(newFormat.format(ip * 0.554113));
                USc = Double.valueOf(newFormat.format(ip * 0.0692641));
                USt = Double.valueOf(newFormat.format(ip * 1.10823));
                USts = Double.valueOf(newFormat.format(ip * 3.32468));
                cm = Double.valueOf(newFormat.format(ip * 1.6387e-5));
                l = Double.valueOf(newFormat.format(ip * 0.0163871));
                ml = Double.valueOf(newFormat.format(ip * 16.3871));
                Ig = Double.valueOf(newFormat.format(ip * 0.00360465));
                Iq = Double.valueOf(newFormat.format(ip * 0.0144186));
                Ip = Double.valueOf(newFormat.format(ip * 0.0288372));
                Io = Double.valueOf(newFormat.format(ip * 0.576744));
                It = Double.valueOf(newFormat.format(ip * 0.92279));
                Its = Double.valueOf(newFormat.format(ip * 2.76837));
                cf = Double.valueOf(newFormat.format(ip * 0.000578704));
                jTextAreaResult.setText(
                        USg + "\t US gal \n\n" + USq + "\t US quarts \n\n" + USp + "\t US pint \n\n" + USo + "\t US oz\n\n" + USc + "\t US cup \n\n"
                        + USt + "\t US tbsp. \n\n" + USts + "\t tsp. \n\n" + cm + "\t Cubic meters \n\n" + l + "\t Liters \n\n"
                        + ml + "\t Milliliters \n\n" + Ig + "\t Imperial gal \n\n" + Iq + "\t Imperial quarts \n\n" + Ip + "\t Imperial pint \n\n"
                        + Io + "\t Imperial oz \n\n" + It + "\t Imperial tbsp. \n\n" + Its + "\t Imperial tsp. \n\n" + cf + "\t Cubic foot \n\n"
                );

            }
        }


    }//GEN-LAST:event_bCalActionPerformed

    private void jTextFieldInputKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldInputKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || c == KeyEvent.VK_BACKSPACE || c == KeyEvent.VK_DELETE || c == KeyEvent.VK_PERIOD)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldInputKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bCal;
    private javax.swing.JButton barea;
    private javax.swing.JButton bds;
    private javax.swing.JButton bfuelcnsmptn;
    private javax.swing.JButton blength;
    private javax.swing.JButton bmass;
    private javax.swing.JButton bspeed;
    private javax.swing.JButton btemp;
    private javax.swing.JButton btime;
    private javax.swing.JButton bvolume;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaResult;
    private javax.swing.JTextField jTextFieldInput;
    // End of variables declaration//GEN-END:variables
}
